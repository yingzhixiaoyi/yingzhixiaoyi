(function(e){function n(n){for(var o,i,s=n[0],c=n[1],l=n[2],u=0,d=[];u<s.length;u++)i=s[u],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&d.push(a[i][0]),a[i]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);p&&p(n);while(d.length)d.shift()();return r.push.apply(r,l||[]),t()}function t(){for(var e,n=0;n<r.length;n++){for(var t=r[n],o=!0,i=1;i<t.length;i++){var s=t[i];0!==a[s]&&(o=!1)}o&&(r.splice(n--,1),e=c(c.s=t[0]))}return e}var o={},i={app:0},a={app:0},r=[];function s(e){return c.p+"static/js/"+({}[e]||e)+"."+{"chunk-46d2d591":"440ae498","chunk-5573a999":"57bdd066"}[e]+".js"}function c(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.e=function(e){var n=[],t={"chunk-46d2d591":1,"chunk-5573a999":1};i[e]?n.push(i[e]):0!==i[e]&&t[e]&&n.push(i[e]=new Promise((function(n,t){for(var o="static/css/"+({}[e]||e)+"."+{"chunk-46d2d591":"62713276","chunk-5573a999":"14b91cfa"}[e]+".css",a=c.p+o,r=document.getElementsByTagName("link"),s=0;s<r.length;s++){var l=r[s],u=l.getAttribute("data-href")||l.getAttribute("href");if("stylesheet"===l.rel&&(u===o||u===a))return n()}var d=document.getElementsByTagName("style");for(s=0;s<d.length;s++){l=d[s],u=l.getAttribute("data-href");if(u===o||u===a)return n()}var p=document.createElement("link");p.rel="stylesheet",p.type="text/css",p.onload=n,p.onerror=function(n){var o=n&&n.target&&n.target.src||a,r=new Error("Loading CSS chunk "+e+" failed.\n("+o+")");r.code="CSS_CHUNK_LOAD_FAILED",r.request=o,delete i[e],p.parentNode.removeChild(p),t(r)},p.href=a;var m=document.getElementsByTagName("head")[0];m.appendChild(p)})).then((function(){i[e]=0})));var o=a[e];if(0!==o)if(o)n.push(o[2]);else{var r=new Promise((function(n,t){o=a[e]=[n,t]}));n.push(o[2]=r);var l,u=document.createElement("script");u.charset="utf-8",u.timeout=120,c.nc&&u.setAttribute("nonce",c.nc),u.src=s(e);var d=new Error;l=function(n){u.onerror=u.onload=null,clearTimeout(p);var t=a[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;d.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",d.name="ChunkLoadError",d.type=o,d.request=i,t[1](d)}a[e]=void 0}};var p=setTimeout((function(){l({type:"timeout",target:u})}),12e4);u.onerror=u.onload=l,document.head.appendChild(u)}return Promise.all(n)},c.m=e,c.c=o,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)c.d(t,o,function(n){return e[n]}.bind(null,o));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="",c.oe=function(e){throw console.error(e),e};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],u=l.push.bind(l);l.push=n,l=l.slice();for(var d=0;d<l.length;d++)n(l[d]);var p=u;r.push([0,"chunk-vendors"]),t()})({0:function(e,n,t){e.exports=t("56d7")},"028e":function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("cd50"),t("8931"),t("cb0b"),t("4856"),t("854f"),t("be4a"),t("ff27"),t("59c4");var i=o(t("4360")),a=t("ed08"),r=t("03a1"),s=100,c='<p>I am testing data, I am testing data.</p><p><img src="https://wpimg.wallstcn.com/4c69009c-0fd4-4153-b112-6cb53d1cf943"></p>',l=["https://picsum.photos/100/100/?image="+(0,a.getRandomNumberByRange)(0,1084),"https://picsum.photos/100/100/?image="+(0,a.getRandomNumberByRange)(0,1084),"https://picsum.photos/100/100/?image="+(0,a.getRandomNumberByRange)(0,1084),"https://picsum.photos/100/100/?image="+(0,a.getRandomNumberByRange)(0,1084),"https://picsum.photos/100/100/?image="+(0,a.getRandomNumberByRange)(0,1084)],u=t("74cb"),d=[],p=u.keys().map((function(e,n){return d.push(e.replace("./","").replace(".md","")||""),{banner:l[n%5],commentsCount:u.keys().length||0,content:"",id:e.replace("./","").replace(".md","")||"",isHot:!0,isTop:!n,pubTime:(new Date).getTime(),summary:"".concat(e.replace("./","").replace(".md","")||""," 部分总结"),title:e.replace("./","").replace(".md","")||"",viewsCount:u.keys().length||0}}));i.default.commit("SET_CONTENT",d);for(var m=[{id:0,isTop:!0,banner:l[0],isHot:!0,pubTime:+r.Random.date("T"),title:"看一遍闭着眼都会安装Lua了",summary:"Lua 是一种轻量小巧的脚本语言，能为应用程序提供灵活的扩展和定制功能。",content:"",viewsCount:4045,commentsCount:99}],h=0;h<s;h++)m.push(r.mock({id:"@increment","isTop|1-4":!0,"banner|+1":l,"isHot|1-3":!0,pubTime:+r.Random.date("T"),title:r.Random.ctitle(10,20),summary:r.Random.cparagraph(),content:c,viewsCount:"@integer(300, 5000)",commentsCount:"@integer(10, 200)"}));function g(e){var n=p.filter((function(n){return n.id==e})),t=[];return n.length?n:(p.forEach((function(n){-1!=n.id.indexOf(e)&&t.push(n)})),t)}var f=[{url:"/post/list",type:"get",response:function(e){var n=e.query,t=n.page,o=void 0===t?1:t,i=n.size,a=void 0===i?10:i,r=n.title,s=void 0===r?"":r;o=o instanceof Number?o:parseInt(o),a=a instanceof Number?a:parseInt(a);var c=p.filter((function(e,n){return n<a*o&&n>=a*(o-1)}));return{code:2e4,data:{total:p.length,items:s?g(s):c,hasNextPage:o*a<p.length,page:o,size:a}}}}];n.default=f},"02f8":function(e,n){var t='<h2 id="intellij-idea-20192破解安装">IntelliJ IDEA 2019.2破解安装</h2> <p>1，正常安装IDEA，选择试用进入软件</p> <p>2，获取到jetbrains-agent.jar文件(破解包解压获得)，放置到你喜欢的目录下</p> <p>3，获取到ACTIVATION_CODE.txt文件(破解包解压获得)，此为离线注册码</p> <pre><code>1. 启动你的IDE，如果上来就需要注册，选择：试用（Evaluate for free）进入IDE\n\n2. 点击你要注册的IDE菜单：&quot;Configure&quot; 或 &quot;Help&quot; -&gt; &quot;Edit Custom VM Options ...&quot;\n    如果提示是否要创建文件，请点&quot;Yes&quot;。\n\n3. 在打开的vmoptions编辑窗口末行添加：-javaagent:/absolute/path/to/jetbrains-agent.jar\n    一定要自己确认好路径(不要使用中文路径)，填错会导致IDE打不开！！！最好使用绝对路径。\n    一个vmoptions内只能有一个-javaagent参数。\n    示例:\n      mac:      -javaagent:/Users/neo/jetbrains-agent.jar\n      linux:    -javaagent:/home/neo/jetbrains-agent.jar\n      windows:  -javaagent:C:\\Users\\neo\\jetbrains-agent.jar\n         my：-javaagent:D:\\Software\\IntelliJ IDEA 2019.2\\jetbrains-agent.jar\n\n4. 重启你的IDE。\n\n5. 点击IDE菜单 &quot;Help&quot; -&gt; &quot;Register...&quot; 或 &quot;Configure&quot; -&gt; &quot;Manage License...&quot;\n    支持两种注册方式：License server 和 Activation code:\n    1). 选择License server方式，地址填入：http://jetbrains-license-server （应该会自动填上）\n        或者点击按钮：&quot;Discover Server&quot;来自动填充地址。\n    2). 选择Activation code方式离线激活，请使用：ACTIVATION_CODE.txt 内的注册码激活\n        如果激活窗口一直弹出（error 1653219），请去hosts文件里移除jetbrains相关的项目\n\n 本项目在最新2019.2上测试通过。</code></pre>';e.exports=t},"0332":function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("transition",{attrs:{name:"slide-fade"}},[o("div",{directives:[{name:"show",rawName:"v-show",value:e.show,expression:"show"}],staticClass:"back-top",on:{click:function(n){return n.stopPropagation(),e.getTop.apply(null,arguments)}}},[o("img",{staticClass:"img1",attrs:{src:t("19b9"),alt:""}}),o("img",{staticClass:"img2",attrs:{src:t("11e1"),alt:""}}),o("p",[e._v("Top")])])])},i=[]},"0445":function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return e.loading?t("div",{attrs:{id:"body"}},[e._m(0)]):e._e()},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"loader"},[t("div",{staticClass:"loader_overlay"}),t("div",{staticClass:"loader_cogs"},[t("div",{staticClass:"loader_cogs__top"},[t("div",{staticClass:"top_part"}),t("div",{staticClass:"top_part"}),t("div",{staticClass:"top_part"}),t("div",{staticClass:"top_hole"})]),t("div",{staticClass:"loader_cogs__left"},[t("div",{staticClass:"left_part"}),t("div",{staticClass:"left_part"}),t("div",{staticClass:"left_part"}),t("div",{staticClass:"left_hole"})]),t("div",{staticClass:"loader_cogs__bottom"},[t("div",{staticClass:"bottom_part"}),t("div",{staticClass:"bottom_part"}),t("div",{staticClass:"bottom_part"}),t("div",{staticClass:"bottom_hole"})]),t("p",[e._v("loading")])])])}]},"04c0":function(e,n){var t='<h2 id="随机风景图">随机风景图</h2> <p>img.src=``<a href="https://picsum.photos/257/160/?image=%60">https://picsum.photos/257/160/?image=`</a> + getRandomNumberByRange(0, 1084)`</p> <pre><code>const Mock = require(&#39;mockjs&#39;);\n\nfunction getRandomNumberByRange(start, end) {\n    return Math.round(Math.random() * (end - start) + start)\n}\nexport default [\n    {\n        url: &#39;/focus/list&#39;,\n        type: &#39;get&#39;,\n        response: () =&gt; {\n            return {\n                code: 20000,\n                data: [\n                    {\n                        id: 1,\n                        title: &#39;公平正义&#39;,\n                        img: `https://picsum.photos/257/160/?image=` + getRandomNumberByRange(0, 1084)\n                    },\n                    {\n                        id: 2,\n                        title: &#39;诚信友爱&#39;,\n                        img: `https://picsum.photos/257/160/?image=` + getRandomNumberByRange(0, 1084)\n                    },\n                    {\n                        id: 3,\n                        title: &#39;和谐相处&#39;,\n                        img: `https://picsum.photos/257/160/?image=` + getRandomNumberByRange(0, 1084)\n                    }\n                ]\n            }\n        }\n    }\n]</code></pre>';e.exports=t},"0558":function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("cd50");var o=t("03a1"),i=["https://s1.ax1x.com/2020/05/14/YDhagx.jpg","https://s1.ax1x.com/2020/05/14/YDhU81.jpg","https://s1.ax1x.com/2020/05/14/YDhBDO.jpg","https://s1.ax1x.com/2020/05/14/YDhoVg.jpg","https://s1.ax1x.com/2020/05/14/YD4FR1.jpg"];function a(e){var n=[];return r(e,null).map((function(e){var t=1+~~(5*Math.random());n.push({comment:e,reply:r(t,e.id,e.fromUserName)})})),n}function r(e,n,t){for(var a=[],r=0;r<e;r++)a.push(o.mock({id:"@increment",postId:"",parentId:"",fromUserId:"",fromUserName:"@cname","fromUserAvatar|+1":i,content:"@ctitle(20,50)",createTime:+o.Random.date("T"),toUserId:n,toUserName:t||"@cname","toUserAvatar|+1":i}));return a}var s=[{url:"/comment",type:"get",response:function(){var e=1+~~(5*Math.random());return{code:2e4,data:a(e)}}}];n.default=s},"0734":function(e,n,t){"use strict";t.r(n);var o=t("4f27"),i=t("3200");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("1c59");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"4cdfd85c",null);n["default"]=s.exports},"0c8b":function(e,n){var t='<h2 id="typorapicgogitee-实现本地图片上传">Typora+PicGo+gitee 实现本地图片上传</h2> <p>[gitee][<a href="https://gitee.com/%5D">https://gitee.com/]</a></p> <p>[Typora官网][<a href="https://typora.io/%5D">https://typora.io/]</a></p> <p>[PicGo官网][<a href="https://github.com/Molunerfinn/PicGo%5D">https://github.com/Molunerfinn/PicGo]</a></p> <p> 1，gitee上新建一个仓库，选择公开；选择设置-生成私人令牌</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201221123127039.png" alt="image-20201221123127039"></p> <p>2，打开Typora，设置-偏好设置-图像如下：PicGo路径请选择正确</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201221121904552.png" alt="image-20201221121904552"></p> <p>3，打开PicGo，下载插件</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201221121945502.png" alt="image-20201221121945502"></p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201221122713462.png" alt="image-20201221122713462"></p> ';e.exports=t},1120:function(e,n,t){"use strict";t("a1b8")},"11e1":function(e,n,t){e.exports=t.p+"static/img/tortoise.34c67253.svg"},"13e9":function(e,n,t){"use strict";t.r(n);var o=t("a9c7"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},"13eb":function(e,n){var t='<h2 id="uniapp请求封装">uniApp请求封装</h2> <h4 id="官网地址httpsuniappdcloudioapirequestrequest">[官网地址][<a href="https://uniapp.dcloud.io/api/request/request%5D">https://uniapp.dcloud.io/api/request/request]</a></h4> <h4 id="1，新建configjs文件，用于集中控制关键key">1，新建config.js文件，用于集中控制关键key</h4> <pre><code>let config = {}\nconfig.appBackBaseUrl = &#39;http://yt-richard.tpddns.cn:8090/driver&#39;\nconfig.appBackBaseWS = &#39;ws://yt-richard.tpddns.cn:8089&#39;\n//判断环境，以使用对应请求域名\nconfig.url = process.env.NODE_ENV === &#39;development&#39; &amp;&amp; window != undefined ?\n  &#39;http://driver.me.bbus:9201&#39; :\n  process.env.NODE_ENV !== &#39;development&#39; &amp;&amp; window != undefined ? &#39;http://driver.test.bbus&#39; :\n    &#39;http://yt-richard.tpddns.cn:8090&#39;;\nexport default config\n</code></pre><h4 id="2，新建servicejs文件，用于基础处理请求接口">2，新建service.js文件，用于基础处理请求接口</h4> <pre><code class="language-vue">import config from &#39;@/config/index.js&#39;//引入key\n\nexport default {//导出接口对象\n  async get(params) {\n    return await this.requests(params, &#39;GET&#39;);\n    uni.showLoading({\n      title: &#39;请求加载中&#39;\n    })\n  },\n  async post(params) {\n    uni.showLoading({\n      title: &#39;请求加载中&#39;\n    });\n    return await this.requests(params, &#39;POST&#39;)\n  },\n  requests(params, type) {\n    let url = config.url + params.url,\n      method = type,\n      header = params.header || {},\n      data = params.data;\n    method = method.toUpperCase();\n    header[&#39;content-type&#39;] = params.queryString ? &#39;application/x-www-form-urlencoded&#39; : &#39;application/json&#39;;\n    if (window == undefined) {//手机环境，抑制重复登录需添加cookie，pc端会自动添加cookie\n      header.Cookie = uni.getStorageSync(&#39;Cookie&#39;)\n    }\n    return new Promise((ResultCode, err) =&gt; {\n      uni.request({\n        url,\n        method,\n        header,\n        data,\n        dataType: &#39;json&#39;,\n        timeout: 5000,\n        sslverify: false,\n        success: res =&gt; {\n          // console.log(&quot;res1: &quot; + JSON.stringify(res));\n          uni.hideLoading();\n          if (typeof res === Boolean) {//返回response\n            ResultCode(res)\n          } else {\n            ResultCode(res.data)\n          }\n          if (res[&#39;header&#39;][&#39;Set-Cookie&#39;]) {//获取存储sid到cookie\n            let str = JSON.stringify(res[&#39;header&#39;][&#39;Set-Cookie&#39;]).replace(/SID=deleteMe;/g, &#39;--&#39;);\n            let rest = /SID=.*; D/i;\n            let str2 = str.match(rest)[0];\n            let rest2 = /SID=.*;/ig;\n            let str3 = str2.match(rest2)[0].split(&#39;;&#39;)[0];\n            uni.setStorageSync(&#39;Cookie&#39;, str3)\n          }\n          switch (res.statusCode) {//状态码控制\n            case 601:\n              //弹出安全密码框进行校验\n              break;\n            case 600:\n              uni.removeStorageSync(&#39;Cookie&#39;);\n              this.logout().then(res =&gt; {\n                if (res.success) {\n                  // uni.reLaunch({\n                  //     url: &#39;./login&#39;,\n                  // })\n                } else {\n                  uni.showToast({\n                    title: &#39;退出失败！&#39;,\n                    icon: &#39;none&#39;\n                  })\n                }\n              });\n              break;\n            case 605:\n              //获取IP跳转\n              break;\n            case 606:\n              uni.removeStorageSync(&#39;Cookie&#39;);\n              this.logout().then(res =&gt; {\n                if (res.success) {\n                  uni.reLaunch({\n                    url: &#39;./login&#39;,\n                  })\n                } else {\n                  uni.showToast({\n                    title: &#39;退出失败！&#39;,\n                    icon: &#39;none&#39;\n                  })\n                }\n              });\n              break;\n            case 607:\n              //跳转\n              break;\n            case 608:\n              //token相关错误\n              break;\n            case 610:\n              //获取IP跳转\n              break;\n            case 404:\n              console.log(&quot;info404: &quot; + JSON.stringify(&#39;info404&#39;));\n              // uni.showModal({\n              //     showCancel: true,\n              //     content: &quot;1234&quot;\n              // });\n              //无此页面\n              break;\n            case 400:\n              //前端请求错误\n              uni.showToast({\n                title: &#39;本机网络错误！&#39;,\n                icon: &#39;none&#39;\n              });\n              break;\n            case 401:\n              //错误提示弹窗，清除缓存\n              break;\n            case 403:\n              //错误提示弹窗\n              break;\n            case 500:\n              //后端请求错误\n              uni.showToast({\n                title: &#39;网络错误！&#39;,\n                icon: &#39;none&#39;\n              });\n              break;\n            case 502:\n              //跳转\n              break;\n            default:\n              break\n          }\n          typeof params.success == &quot;function&quot; &amp;&amp; params.success(res.data);\n        },\n        fail: (e) =&gt; {\n          console.log(&quot;网络请求fail:&quot; + JSON.stringify(e));\n          uni.hideLoading();\n          typeof params.fail == &quot;function&quot; &amp;&amp; params.fail(e.data);\n        },\n        // 请求完成\n        complete: () =&gt; {\n          uni.hideLoading();\n          typeof params.complete == &quot;function&quot; &amp;&amp; params.complete();\n\n        }\n      });\n\n    })\n  },\n\n  login(data) {\n    return this.post({\n      url: &#39;/api-driver/driver/passport/login.html&#39;,\n      data,\n      queryString: true//控制 header[&#39;content-type&#39;]的值\n    })\n  },\n  logout(data) {\n    return this.post({\n      url: &#39;/api-driver/driver/passport/logout.html&#39;,\n      data,\n      queryString: true\n    })\n  },\n}\n</code></pre> <h4 id="3，mainjs">3，main.js</h4> <pre><code>import service from &#39;@/util/service.js&#39;\nVue.prototype.$service = service;//挂载到原型上</code></pre><h4 id="4，页面使用">4，页面使用</h4> <pre><code>let vm=this;\nvm.$service.login(paramData).then(res =&gt; {console.log(res)})</code></pre><h4 id="阶段总结">阶段总结</h4> <p>1，如接口过多，可再单独写到.js文件中抽离导出</p> <p>2，需跟后端协商好，状态码及返回内容集合格式</p> ';e.exports=t},"17c6":function(e,n,t){},1865:function(e,n,t){"use strict";t.r(n);var o=t("9037"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},"19b9":function(e,n,t){e.exports=t.p+"static/img/_tortoise.ef46b684.svg"},"1c59":function(e,n,t){"use strict";t("554a")},"1d01":function(e,n,t){},"23be":function(e,n,t){"use strict";t.r(n);var o=t("8af8"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},"279a":function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t("ed08"),i=(t("03a1"),[{url:"/focus/list",type:"get",response:function(){return{code:2e4,data:[{id:1,title:"公平正义",img:"https://picsum.photos/257/160/?image="+(0,o.getRandomNumberByRange)(0,1084)},{id:2,title:"诚信友爱",img:"https://picsum.photos/257/160/?image="+(0,o.getRandomNumberByRange)(0,1084)},{id:3,title:"和谐相处",img:"https://picsum.photos/257/160/?image="+(0,o.getRandomNumberByRange)(0,1084)}]}}}]);n.default=i},3200:function(e,n,t){"use strict";t.r(n);var o=t("416a"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},"34a9":function(e,n,t){},"360e":function(e,n,t){"use strict";t("8959")},"365c":function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.fetchList=a,n.fetchFocus=r,n.fetchCategory=s,n.fetchFriend=c,n.fetchSocial=l,n.fetchSiteInfo=u,n.fetchComment=d;var i=o(t("b775"));function a(e){return(0,i.default)({url:"/post/list",method:"get",params:e})}function r(){return(0,i.default)({url:"/focus/list",method:"get",params:{}})}function s(){return(0,i.default)({url:"/category",method:"get",params:{}})}function c(){return(0,i.default)({url:"/friend",method:"get",params:{}})}function l(){return(0,i.default)({url:"/social",method:"get",params:{}})}function u(){return(0,i.default)({url:"/site",method:"get",params:{}})}function d(){return(0,i.default)({url:"/comment",method:"get",params:{}})}},"396e":function(e,n){var t='<h2 id="声网音视频通话">声网音视频通话</h2> <p>[agora声网官网][<a href="https://www.agora.io/cn%5D">https://www.agora.io/cn]</a></p> <p>[sdk-v4.2.1][<a href="https://docs.agora.io/cn/Video/API%20Reference/web_ng/index.html%5D">https://docs.agora.io/cn/Video/API%20Reference/web_ng/index.html]</a></p> <p>1,运行安装命令：</p> <pre><code class="language-shell">npm install agora-rtc-sdk-ng --save</code></pre> <p>2,在你的项目的 JavaScript 代码中加入以下代码，引入这个模块：</p> <pre><code class="language-js">import AgoraRTC from &quot;agora-rtc-sdk-ng&quot;\nconst client = AgoraRTC.createClient({ mode: &quot;rtc&quot;, codec: &quot;vp8&quot; });</code></pre> <p>3,或者绑定全局属性</p> <pre><code>import AgoraRTC from &quot;agora-rtc-sdk-ng&quot;;\nVue.prototype.$AgoraRTC=AgoraRTC</code></pre><p>4,实例页面</p> <pre><code class="language-vue">&lt;template&gt;\n    &lt;!-- 音视频弹窗 --&gt;\n    &lt;div class=&quot;videoPop&quot; v-show=&quot;showVideo&quot; id=&quot;move_div&quot; @mousedown=&quot;changePd&quot; @mouseup=&quot;changePu&quot;&gt;\n        &lt;div class=&quot;top&quot;&gt;&lt;img :src=&quot;downUrl+$store.state.showVideoPop.imageIconUrl&quot; alt=&quot;&quot;&gt;&lt;span&gt;{{$store.state.showVideoPop.fromName||&#39;&#39;}}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;showTime&quot; v-show=&quot;!isShowVideo1&amp;&amp;!isShowVideo2&quot;&gt;{{textAudio}}&lt;/div&gt;\n        &lt;div class=&quot;content&quot; v-show=&quot;isShowVideo1||isShowVideo2&quot;&gt;\n            &lt;span id=&quot;video-container1&quot; v-show=&quot;isShowVideo1&quot; class=&quot;video&quot;&gt;&lt;/span&gt;\n            &lt;span id=&quot;video-container2&quot; v-show=&quot;isShowVideo2&quot; class=&quot;video&quot;&gt;&lt;/span&gt;\n            &lt;span class=&quot;warning&quot; v-show=&quot;warning1&quot;&gt;{{$t(&#39;currentNetworkIsUnstable&#39;)}}&lt;/span&gt;\n            &lt;span class=&quot;warning2&quot; v-show=&quot;warning2&quot;&gt;{{$t(&#39;otherNetworkIsUnstable&#39;)}}&lt;/span&gt;\n            &lt;span v-show=&quot;!isShowVideo2&quot; class=&quot;video&quot;&gt;{{$t(&#39;Calling&#39;)}}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div v-show=&quot;$store.getters.getEngaged&amp;&amp;time.s&quot; class=&quot;time&quot;&gt;\n            &lt;span&gt;{{$t(&#39;callDuration&#39;)}}&lt;/span&gt;\n            &lt;span v-show=&quot;time.h!=&#39;00&#39;&quot;&gt;{{time.h}}&lt;/span&gt; &lt;span v-show=&quot;time.h!=&#39;00&#39;&quot;&gt; ：&lt;/span&gt;\n            &lt;span&gt;{{time.m}}&lt;/span&gt;&lt;span&gt; ：&lt;/span&gt;\n            &lt;span&gt;{{time.s}}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;bottom&quot;&gt;&lt;span class=&quot;left&quot; @click=&quot;answer&quot;\n                                  :style=&quot;{&#39;backgroundColor&#39;:isMute?&#39;#D3D3D3&#39;: &#39;#00c2ff&#39;}&quot;&gt;{{messageType?$t(&#39;Answer&#39;): isMute?$t(&#39;muted&#39;):$t(&#39;Mute&#39;)}}&lt;/span&gt;\n            &lt;span class=&quot;right&quot; @click=&quot;colseVideo($store.getters.getEngaged?1:$store.state.showVideoPop.type==1?4:3)&quot;&gt;{{$t(&#39;hangUp&#39;)}}&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n    export default {\n        name: &quot;audioAndVideo&quot;,\n        data() {\n            return {\n                isShowVideo1: false,\n                isShowVideo2: false,\n                rtc: {\n                    // 用来放置本地客户端。\n                    client: null,\n                    // 用来放置本地音视频频轨道对象。\n                    localAudioTrack: null,\n                    localVideoTrack: null,\n                },\n                messageType: 0,\n                showVideo: false,\n                conversationTime: 0,\n                callTime: 0,\n                duration: 0,\n                audios: null,\n                isMute: false,\n                time: {\n                    h: 0,\n                    m: 0,\n                    s: 0\n                },\n                x: 0,\n                y: 0,\n                l: 0,\n                t: 0,\n                isDown: false,\n                badInt: false,\n                warning1: false,\n                warning2: false,\n            }\n        },\n        computed: {\n            downUrl() {\n                let url = JSON.parse(localStorage.getItem(&quot;readydata&quot;)).fileBaseInfo\n                    .downUrl;\n                return url;\n            },\n            textAudio() {\n                let data = this.$store.state.showVideoPop\n                return data.messageType == 42 &amp;&amp; data.type == 4 ? this.$t(&#39;voiceToElectricity&#39;) : data.messageType == 42 &amp;&amp; data.type == 1 ? this.$t(&#39;voiceCalling&#39;) :\n                    data.messageType == 44 &amp;&amp; data.type == 1 ? this.$t(&#39;videoCalling&#39;) : this.$t(&#39;inVoiceCall&#39;)\n            }\n        },\n        methods: {\n            changePu() {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //开关关闭\n                vm.isDown = false;\n                dv.style.cursor = &#39;default&#39;;\n                vm.changeMove()\n            },\n            changePd(e) {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //获取x坐标和y坐标\n                vm.x = e.clientX;\n                vm.y = e.clientY;\n\n                //获取左部和顶部的偏移量\n                vm.l = dv.offsetLeft;\n                vm.t = dv.offsetTop;\n                //开关打开\n                vm.isDown = true;\n                //设置样式\n                dv.style.cursor = &#39;move&#39;;\n                vm.changeMove()\n            },\n            changeMove() {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //鼠标移动\n                window.onmousemove = function (e) {\n                    if (!vm.isDown) {\n                        return;\n                    }\n                    //获取x和y\n                    let nx = e.clientX;\n                    let ny = e.clientY;\n                    //计算移动后的左偏移量和顶部的偏移量\n                    let nl = nx - (vm.x - vm.l);\n                    let nt = ny - (vm.y - vm.t);\n\n                    dv.style.left = nl + &#39;px&#39;;\n                    dv.style.top = nt + &#39;px&#39;;\n                }\n            },\n            startTime() {\n                let vm = this;\n                vm.duration = 0\n                vm.conversationTime = setInterval(() =&gt; {\n                    vm.duration++;\n                    // 需要改变页面上时分秒的值\n                    vm.time = {\n                        h: vm.showNum(parseInt(vm.duration / 60 / 60)),\n                        m: vm.showNum(parseInt(vm.duration / 60) % 60),\n                        s: vm.showNum(vm.duration % 60),\n                    }\n                }, 1000)\n            },\n            showNum(num) {\n                if (num &lt; 10) {\n                    return &#39;0&#39; + num\n                }\n                return num\n            },\n            async getCenter() {\n                let vm = this;\n                let data = vm.$store.state.showVideoPop\n                vm.rtc.client = vm.$AgoraRTC.createClient({mode: &quot;rtc&quot;, codec: &quot;vp8&quot;});\n                //订阅远端音视频事件\n                vm.rtc.client.on(&quot;user-published&quot;, async (user, mediaType) =&gt; {\n                    // 开始订阅远端用户。\n                    await vm.rtc.client.subscribe(user, mediaType);\n                    // 表示本次订阅的是视频。\n                    if (mediaType === &quot;video&quot; &amp;&amp; data.messageType == 44) {\n                        if (data.messageType == 44 &amp;&amp; !vm.conversationTime) {\n                            vm.startTime()\n                        }\n                        // 订阅完成后，从 `user` 中获取远端视频轨道对象。\n                        const remoteVideoTrack = user.videoTrack;\n                        if (remoteVideoTrack) {\n                            remoteVideoTrack.play(&quot;video-container2&quot;)\n                        }\n                    }\n                    // 表示本次订阅的是音频。\n                    if (mediaType === &quot;audio&quot;) {\n                        if (data.messageType == 42 &amp;&amp; !vm.conversationTime) {\n                            vm.startTime()\n                        }\n                        // 订阅完成后，从 `user` 中获取远端音频轨道对象。\n                        const remoteAudioTrack = user.audioTrack;\n                        // 播放音频因为不会有画面，不需要提供 DOM 元素的信息。\n                        if (remoteAudioTrack) {\n                            remoteAudioTrack.play();\n                        }\n                    }\n                    this.$store.commit(&#39;SET_engaged&#39;, true)\n                });\n                //监听远端用户离线\n                vm.rtc.client.on(&quot;user-left&quot;, async (user, reason) =&gt; {\n                    if (reason == &#39;ServerTimeOut&#39;) {\n                        vm.colseVideo(2)\n                    }\n                    if (reason == &#39;Quit&#39; &amp;&amp; this.$store.getters.getEngaged) {\n                        vm.colseVideo(6)\n                    }\n                });\n                //音视频加密\n                vm.rtc.client.setEncryptionConfig(data.encryptionMode, data.encryptionKey);\n                //加入频道\n                await vm.rtc.client.join(&#39;adcc0b90cdda42b784ff4d7773de12c3&#39;, data.channelName, data.callToken, data.uid)\n                //通过麦克风采集的音频创建本地音频轨道对象。\n                vm.rtc.localAudioTrack = await vm.$AgoraRTC.createMicrophoneAudioTrack();\n                // 将音视频轨道对象发布到频道中。\n                if (vm.rtc.localAudioTrack) {\n                    await vm.rtc.client.publish(vm.rtc.localAudioTrack);\n                }\n                if (vm.rtc.localVideoTrack) {\n                    await vm.rtc.client.publish(vm.rtc.localVideoTrack);\n                }\n                //监听token失效事件\n                vm.rtc.client.on(&quot;token-privilege-will-expire&quot;, async () =&gt; {\n                    vm.$serve.refreshCallToken({channelName: data.channelName, uid: data.uid}).then(res =&gt; {\n                        vm.rtc.client.renewToken(res.data.data.callToken);\n                    })\n                })\n                //监听网络事件\n                vm.rtc.client.on(&#39;network-quality&#39;, stats =&gt; {\n                    console.log(stats, 203)\n                    if (stats.downlinkNetworkQuality &gt; 4) {\n                        vm.warning2 = true\n                        console.log(&#39;对方网络不稳定！&#39;)\n                        setTimeout(() =&gt; {\n                            vm.warning2 = false\n                        }, 2000)\n                    }\n                    if (stats.uplinkNetworkQuality &gt; 4) {\n                        console.log(&#39;当前网络不稳定！&#39;)\n                        vm.warning1 = true\n                        setTimeout(() =&gt; {\n                            vm.warning1 = false\n                        }, 2000)\n                    }\n                    if (stats.downlinkNetworkQuality &gt; 5) {\n                        vm.colseVideo(6)\n                    }\n                });\n            },\n            async openVedio() {\n                this.isShowVideo1 = true\n                // 通过摄像头采集的视频创建本地视频轨道对象。\n                this.rtc.localVideoTrack = await this.$AgoraRTC.createCameraVideoTrack();\n                this.rtc.localVideoTrack.play(&quot;video-container1&quot;)\n            },\n            async answer() {\n                let vm = this\n                let data = vm.$store.state.showVideoPop\n                if (this.messageType == 1) {\n                    this.openMuc()\n                    this.$serve.connectCall({&#39;channelName&#39;: this.$store.state.showVideoPop.channelName}).then(() =&gt; {\n                        this.messageType = 0\n                        if (data.messageType == 44) {\n                            this.isShowVideo2 = true\n                            this.openVedio()\n                        }\n                        this.getCenter()\n                    })\n                } else {\n                    if (vm.isMute) {\n                        if (vm.rtc.client) {\n                            await vm.rtc.client.publish(vm.rtc.localAudioTrack);\n                        } else {\n                            this.openMuc(1)\n                        }\n                    }\n                    if (!vm.isMute) {\n                        this.openMuc()\n                        if (vm.rtc.client) {\n                            await vm.rtc.client.unpublish(vm.rtc.localAudioTrack);\n                        }\n                    }\n                    vm.isMute = !vm.isMute\n                }\n            },\n            showVideoPops() {\n                let data = this.$store.state.showVideoPop\n                //去电中\n                if ((data.messageType == 44 || data.messageType == 42) &amp;&amp; data.type == 4) {\n                    if (data.messageType == 44) {\n                        this.openVedio()\n                    }\n                    this.messageType = 0\n                    this.showVideo = true\n                    this.openMuc(1)\n                }\n                //来电中\n                if ((data.messageType == 44 || data.messageType == 42) &amp;&amp; data.type == 1) {\n                    this.openMuc(1)\n                    this.messageType = 1\n                    this.showVideo = true\n                }\n            },\n            async colseVideo(e) {\n                let vm = this;\n                vm.$store.commit(&#39;SET_engaged&#39;, false)\n                vm.$serve.stopCall({\n                    &quot;channelName&quot;: vm.$store.state.showVideoPop.channelName,\n                    &quot;type&quot;: e,\n                    &#39;duration&#39;: e == 1 ? vm.duration : e == 6 ? vm.duration : undefined\n                }).then(() =&gt; {\n                })\n                vm.isMute = false\n                vm.openMuc(2)\n                if (this.callTime) {\n                    clearTimeout(this.callTime)\n                }\n                if (vm.conversationTime) {\n                    clearInterval(vm.conversationTime)\n                    vm.time = {\n                        h: 0,\n                        m: 0,\n                        s: 0\n                    }\n                    vm.conversationTime = 0\n                }\n\n                if (this.rtc.client) {\n                    await vm.rtc.client.leave();\n                }\n                if (this.rtc.localVideoTrack) {\n                    vm.rtc.localVideoTrack.close();\n                }\n                if (this.rtc.localAudioTrack) {\n                    vm.rtc.localAudioTrack.close();\n                }\n                vm.rtc = {\n                    client: null,\n                    localAudioTrack: null,\n                    localVideoTrack: null,\n                }\n                vm.showVideo = false\n                vm.isShowVideo1 = false\n                vm.isShowVideo2 = false\n            },\n            openMuc(e) {\n                if (this.audios) {\n                    this.audios.pause()\n                }\n                if (e == 1) {\n                    this.audios = new Audio(require(&#39;@/assets/CRBT/background.mp3&#39;))\n                    this.audios.loop = true\n                    this.audios.play()\n                }\n                if (e == 2) {\n                    this.audios = new Audio(require(&#39;@/assets/CRBT/call_stop.mp3&#39;))\n                    this.audios.play()\n                }\n            },\n        }\n        ,\n        watch: {\n            &#39;$store.state.showVideoPop&#39;(e) {\n                console.log(e, 329)\n                if (e.flag &amp;&amp; !this.$store.getters.getEngaged) {\n                    this.showVideoPops()\n                }\n                if (e.callTime) {//主叫等待时间\n                    this.callTime = setTimeout(() =&gt; {\n                        this.colseVideo(2)\n                    }, 60 * 1000)\n                }\n                if (e.messageType == 43 &amp;&amp; e.type == 1) {\n                    if (this.$store.getters.getEngaged) {\n                        this.colseVideo(1)\n                    }\n                }\n                if ((e.messageType == 44 || e.messageType == 42) &amp;&amp; e.type == 3) {\n                    this.openMuc()\n                    this.colseVideo(e.reason)\n                }\n                if ((e.messageType == 44 || e.messageType == 42) &amp;&amp; e.type == 2 &amp;&amp; this.messageType == 1) {\n                    this.openMuc()\n                    this.showVideo = false\n                } else if ((e.messageType == 44 || e.messageType == 42) &amp;&amp; e.type == 2 &amp;&amp; this.messageType == 0) {//接通中\n                    if (this.callTime) {\n                        clearTimeout(this.callTime)\n                    }\n                    this.openMuc()\n                    this.getCenter()\n                    if (e.messageType == 44) {\n                        this.isShowVideo2 = true\n                    }\n                }\n            }\n        }\n    }\n&lt;/script&gt;\n\n&lt;style scoped lang=&quot;less&quot;&gt;\n    .videoPop {\n        min-width: 350px;\n        background-color: #111F2C;\n        position: fixed;\n        top: calc(10% + 20px);\n        /*right: calc(10% + 20px);*/\n        left: 50%;\n        z-index: 4;\n        padding: 20px;\n\n        .showTime {\n            height: 100px;\n            line-height: 100px;\n            text-align: center;\n            color: #FFF;\n            font-size: 20px;\n        }\n\n        .top {\n            display: flex;\n            align-items: center;\n\n            img {\n                width: 50px;\n                height: 50px;\n                border-radius: 50%;\n            }\n\n            span {\n                color: #FFF;\n                font-weight: 600;\n                font-family: MicrosoftYaHeiSemibold;\n                margin-left: 10px;\n            }\n        }\n\n        .time {\n            color: #FFF;\n\n        }\n\n        .content {\n            display: flex;\n            margin: 20px 0;\n\n            .video {\n                height: 300px;\n                line-height: 300px;\n                text-align: center;\n                width: 200px;\n                display: inline-block;\n                color: #FFF;\n                font-size: 20px;\n                /*margin: 20px 0;*/\n            }\n\n            .warning {\n                color: black;\n                font-weight: 600;\n                position: absolute;\n                top: 45%;\n                left: 15%;\n            }\n\n            .warning2 {\n                color: black;\n                font-weight: 600;\n                position: absolute;\n                top: 45%;\n                left: 55%;\n            }\n\n        }\n\n        .bottom {\n            display: flex;\n            justify-content: space-between;\n\n            span {\n                width: 50px;\n                height: 50px;\n                line-height: 50px;\n                border-radius: 50%;\n                cursor: pointer;\n            }\n\n            span:nth-child(2) {\n                background-color: red;\n            }\n        }\n    }\n&lt;/style&gt;</code></pre> <p>阶段总结：</p> <p>1，依靠socket推送信息，触发监听任务</p> <p>2，挂断电话的方式，应以socket推送触发为主，以SDK触发为辅</p> <p>3，如网络不稳定的情况下，SDK监听会优于socket推送。故两种方法必须都存在。</p> ';e.exports=t},"3dfd":function(e,n,t){"use strict";t.r(n);var o=t("bff1"),i=t("23be");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("7c55");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,null,null);n["default"]=s.exports},"416a":function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=o(t("fdba")),a={name:"layout-footer",data:function(){return{socials:[]}},components:{sectionTitle:i.default},computed:{runTimeInterval:function(){return this.$store.state.runTimeInterval}},methods:{getSocial:function(){var e=this;this.$store.dispatch("getSocials").then((function(n){e.socials=n}))}},created:function(){this.getSocial(),this.$store.dispatch("initComputeTime")}};n.default=a},4360:function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("8931");var i=o(t("2c3f")),a=o(t("7736")),r=t("ed08"),s=t("365c");i.default.use(a.default);var c="1606089600000",l=null,u={loading:!1,runTimeInterval:"",socials:"",websiteInfo:"",contents:[]},d={SET_CONTENT:function(e,n){e.contents=n},SET_LOADING:function(e,n){e.loading=n},SET_SOCIALS:function(e,n){e.socials=n},SET_SITE_INFO:function(e,n){e.websiteInfo=n},GET_RUNTIME_INTERVAL:function(e){l&&e.runTimeInterval||(clearInterval(l),l=setInterval((function(){e.runTimeInterval=(0,r.getTimeInterval)(c)}),1e3))}},p={setLoading:function(e,n){var t=e.commit;t("SET_LOADING",n)},initComputeTime:function(e){var n=e.commit;n("GET_RUNTIME_INTERVAL")},getSiteInfo:function(e){var n=e.commit,t=e.state;return new Promise((function(e){t.websiteInfo?e(t.websiteInfo):(0,s.fetchSiteInfo)().then((function(t){var o=t.data||{};n("SET_SITE_INFO",o),e(o)})).catch((function(n){e({})}))}))},getSocials:function(e){var n=e.commit,t=e.state;return new Promise((function(e){t.socials?e(t.socials):(0,s.fetchSocial)().then((function(t){var o=t.data||[];n("SET_SOCIALS",o),e(o)})).catch((function(n){e([])}))}))}},m={loading:function(e){return e.loading},runTimeInterval:function(e){return e.runTimeInterval},notice:function(e){return e.websiteInfo?e.websiteInfo.notice:""},content:function(e){return e.contents?e.contents:""}},h=new a.default.Store({state:u,mutations:d,actions:p,modules:{},getters:m});n.default=h},"46db":function(e,n){var t='<h2 id="uniapp清除缓存">uniApp清除缓存</h2> <pre><code>//计算缓存\nformatSize() {\n    try {\n        plus.cache.calculate(function (size) {\n            console.log(size, 163)\n            let sizeCache = parseInt(size);\n            if (sizeCache == 0) {\n                vm.fileSizeString = &quot;0B&quot;;\n            } else if (sizeCache &lt; 1024) {\n                vm.fileSizeString = sizeCache + &quot;B&quot;;\n            } else if (sizeCache &lt; 1048576) {\n                vm.fileSizeString = (sizeCache / 1024).toFixed(2) + &quot;KB&quot;;\n            } else if (sizeCache &lt; 1073741824) {\n                vm.fileSizeString = (sizeCache / 1048576).toFixed(2) + &quot;MB&quot;;\n            } else {\n                vm.fileSizeString = (sizeCache / 1073741824).toFixed(2) + &quot;GB&quot;;\n            }\n            console.log(vm.fileSizeString, &#39;查看缓存&#39;)\n        })\n    } catch (e) {\n        console.log(&#39;当前设备不是手机&#39;)\n    }\n\n},\n//清理缓存\nclearCache() {\n    try {\n        let os = plus.os.name;\n        if (os == &#39;Android&#39;) {\n            let main = plus.android.runtimeMainActivity();\n            let sdRoot = main.getCacheDir();\n            let files = plus.android.invoke(sdRoot, &quot;listFiles&quot;);\n            let len = files.length;\n            for (let i = 0; i &lt; len; i++) {\n                let filePath = &#39;&#39; + files[i]; // 没有找到合适的方法获取路径，这样写可以转成文件路径\n                plus.io.resolveLocalFileSystemURL(filePath, function (entry) {\n                    if (entry.isDirectory) {\n                        entry.removeRecursively(function (entry) { //递归删除其下的所有文件及子目录\n                            uni.showToast({\n                                title: &#39;缓存清理完成&#39;,\n                                duration: 2000\n                            });\n                            vm.formatSize(); // 重新计算缓存\n                        }, function (e) {\n                            console.log(e.message)\n                        });\n                    } else {\n                        entry.remove();\n                    }\n                }, function (e) {\n                    console.log(&#39;文件路径读取失败&#39;)\n                });\n            }\n        } else { // ios\n            plus.cache.clear(function () {\n                uni.showToast({\n                    title: &#39;缓存清理完成&#39;,\n                    duration: 2000\n                });\n                vm.formatSize();\n            });\n        }\n    } catch (e) {\n\n    }\n},</code></pre>';e.exports=t},4796:function(e,n){var t='<h2 id="npm源设置">NPM源设置</h2> <h3 id="npmhttpswwwnpmjscom">[npm][<a href="https://www.npmjs.com/%5D">https://www.npmjs.com/]</a></h3> <p>查看当前源</p> <pre><code>npm config get registry</code></pre><p>npm初始</p> <pre><code>npm config set registry https://registry.npmjs.org</code></pre><p>npm-淘宝源</p> <pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><h3 id="yarnhttpsclassicyarnpkgcomendocsinstallwindows-stable">[yarn][<a href="https://classic.yarnpkg.com/en/docs/install#windows-stable%5D">https://classic.yarnpkg.com/en/docs/install#windows-stable]</a></h3> <p>查看当前源</p> <pre><code>yarn config get registry</code></pre><p>yarn初始</p> <pre><code>yarn config set registry https://registry.yarnpkg.com</code></pre><p>yarn-淘宝源</p> <pre><code>yarn config set registry https://registry.npm.taobao.org</code></pre><h3 id="cnpm">cnpm</h3> <pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org\n//输入命令,查看是否安装成功\ncnpm </code></pre>';e.exports=t},"4f27":function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"layout-footer"}},[t("div",{staticClass:"footer-main"},[e.socials.length?t("div",{staticClass:"footer-item"},e._l(e.socials,(function(n){return t("div",{key:n.id},[t("a",{staticClass:"out-link",attrs:{target:"_blank",href:n.href}},[t("i",{staticClass:"iconfont",class:n.icon}),e._v(e._s(n.title))])])})),0):e._e(),e._m(0),t("div",{staticClass:"footer-item"},[t("div",[e._v("本站已苟活 "+e._s(e.runTimeInterval))])])]),e._m(1)])},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"footer-item"},[t("div",{staticStyle:{"font-size":"17px","font-weight":"bold"}},[e._v("资源")]),t("div",[t("a",{staticClass:"out-link",attrs:{target:"_blank",href:"https://segmentfault.com/weekly?utm_source=sf-footer"}},[e._v("每周精选")])]),t("div",[t("a",{staticClass:"out-link",attrs:{target:"_blank",href:"https://www.jmjc.tech/"}},[e._v("简明教程")])]),t("div",[t("a",{staticClass:"out-link",attrs:{target:"_blank",href:"https://www.liaoxuefeng.com/"}},[e._v("廖雪峰的官方网站")])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"copyright"},[e._v("Copyright © 2020 by "),t("a",{staticClass:"out-link",attrs:{href:"http://yingzhixiaoyi.gitee.io/",target:"_blank"}},[e._v("yingzhixiaoyi")]),e._v(" . All rights reserved. | "),t("a",{staticClass:"out-link",attrs:{href:"https://yingzhixiaoyi.github.io/yingzhixiaoyi/",target:"_blank"}},[e._v("深ICP备20201123号-1 ")])])}]},5226:function(e,n){var t='<h2 id="访问githubgithubpagesgiteepages配置">访问GitHub,GitHubPages,GiteePages配置</h2> <p>[查看GitHub地址][<a href="http://www.github.com.ipaddress.com/%5D">http://www.github.com.ipaddress.com/]</a></p> <p>hosts文件中增加映射地址</p> <pre><code>140.82.114.4   github.com</code></pre><p>如pages服务不能正常打开</p> <p>[查询地址1][<a href="https://tools.ipip.net/dns.php%5D">https://tools.ipip.net/dns.php]</a></p> <p>[查询DNS地址2][<a href="http://tool.chinaz.com/dns%5D">http://tool.chinaz.com/dns]</a></p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201225100926032.png" alt="image-20201225100926032"></p> <p>hosts配置</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201225101020396.png" alt="image-20201225101020396"></p> ';e.exports=t},"523d":function(e,n){var t='<h2 id="vue项目切换主题">Vue项目切换主题</h2> <pre><code>App.Vue文件中\n\n &lt;div id=&quot;app&quot; &gt;&lt;router-view /&gt;&lt;/div&gt;\n\n  mounted() { // 主题颜色\n  this.setTheme() },\n\n  methods: {\n    setTheme() {\n    document.getElementById(&quot;app&quot;).className=electronStore.get(&quot;theme-color&quot;)?electronStore.get(&quot;theme-color&quot;):&quot;BlackLook&quot;},\n\n  watch: {\n    &#39;$store.getters.getChangeThemeColor&#39;(){\n     // 主题颜色\n     this.setTheme();}\n</code></pre><pre><code>新建theme.less文件\n.BlackLook {\n  --theme-color:#05a875;\n}\n.BlueLook {\n  --theme-color: #0679FF;\n}</code></pre><pre><code>main.js文件中\nimport &quot;@/assets/less/theme.less&quot;;</code></pre><pre><code>使用方式，任一.Vue文件style中使用\nbackground: var(--theme-color);</code></pre><h4 id="阶段总结：">阶段总结：</h4> <p>1，单页面应用，监听仓库中主题变量，改变根节点className</p> <p>2，如需配置对应主题的其他操作，可以另新建js文件，根据主题变量输出异同的内容</p> ';e.exports=t},"531d":function(e,n,t){"use strict";t("1d01")},"554a":function(e,n,t){},"56d7":function(e,n,t){var o=t("ef80").default;t("be4a"),t("d93d"),t("02e5"),t("6870"),t("18e9");var i=o(t("2c3f")),a=o(t("3dfd")),r=o(t("a18c")),s=o(t("4360"));t("a7c1"),t("a342");var c=t("ed08"),l=o(t("bd49"));t("ec8a"),t("cbb7"),i.default.use(l.default),i.default.config.productionTip=!1,i.default.filter("parseTime",(function(e){return(0,c.parseTime)(e,"{y}-{m}-{d}")})),new i.default({router:r.default,store:s.default,render:function(e){return e(a.default)}}).$mount("#app")},"60af":function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t={name:"section-title"};n.default=t},"61e0":function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{class:{fixed:e.fixed,hidden:e.hidden},attrs:{id:"layout-header"},on:{click:function(n){n.stopPropagation(),e.mobileShow=!1}}},[o("div",{staticClass:"site-logo"},[o("router-link",{attrs:{to:"/"}},[o("img",{attrs:{src:t("99f6"),alt:""}})])],1),o("div",{staticClass:"menus-btn",on:{click:function(n){n.stopPropagation(),e.mobileShow=!e.mobileShow}}},[e._v(" Menus ")]),o("div",{staticClass:"site-menus",class:{mobileShow:e.mobileShow},on:{click:function(n){n.stopPropagation(),e.mobileShow=!e.mobileShow}}},[o("div",{staticClass:"menu-item header-search"},[o("header-search")],1),e._l(e.$store.getters.content,(function(n,t){return e.topWidth?o("div",{key:t,staticClass:"menu-item"},[o("router-link",{attrs:{to:{path:"/contents",query:{id:n}}}},[e._v(e._s(n))])],1):e._e()}))],2)])},i=[]},"631c":function(e,n){var t='<h2 id="vue-cli创建uniapp项目">vue-cli创建uniApp项目</h2> <p>[vue-cli官网][<a href="https://cli.vuejs.org/zh/guide/installation.html%5D">https://cli.vuejs.org/zh/guide/installation.html]</a></p> <p>[uniApp官网][<a href="https://uniapp.dcloud.io/%5D">https://uniapp.dcloud.io/]</a></p> <h3 id="环境安装">环境安装</h3> <pre><code class="language-javascript">全局安装vue-cli\nnpm install -g @vue/cli\n\n创建UniApp\nvue create -p dcloudio/uni-preset-vue 你的项目名</code></pre> <h5 id="注意：name不能包含大写字母">注意：name不能包含大写字母</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/blogImage/1607679256376.png" alt=""></p> <h5 id="选择模板">选择模板</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/1607679368973.png" alt="1607679368973"></p> <h5 id="cd到目录，yarn-serve--npm-run-serve-启动项目">cd到目录，yarn serve || npm run serve 启动项目</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/1607679487125.png" alt=""></p> <h5 id="点击链接，查看页面">点击链接，查看页面</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/1607679586221.png" alt=""></p> <h5 id="项目生成文件">项目生成文件</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/1607680534685.png" alt=""></p> <h4 id="阶段总结：">阶段总结：</h4> <p>1，vue-cli生成的项目可以，用HbuilderX打开</p> <p>2，H5环境与APP环境异同，APP环境读取不到window</p> ';e.exports=t},"634f":function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=o(t("74ac")),a={name:"layout-body",data:function(){return{minHeight:600}},components:{backTop:i.default}};n.default=a},6990:function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;t("03a1");var o=[{url:"/site",type:"get",response:function(){return{code:2e4,data:{avatar:"https://nos.netease.com/mail-online/5a480f7f09e60760807e74f14d1ee7d4/mail180x180.jpg",slogan:"The way up is not crowded, and most chose ease.",name:"yingzhixiaoyi′blog",domain:"http://yingzhixiaoyi.gitee.io/",notice:"积累点滴，未来可期",desc:"一个It技术的探索者"}}}},{url:"/social",type:"get",response:function(){return{code:2e4,data:[{id:1,title:"QQ",icon:"iconqq",color:"#1AB6FF ",href:"https://www.zhihu.com/people/yingzhixiaoyi/posts"},{id:2,title:"Gitee",icon:"icongitee",color:"#d81e06",href:"http://yingzhixiaoyi.gitee.io/"},{id:3,title:"GitHub",icon:"icongithub",color:"",href:"https://github.com/yingzhixiaoyi"},{id:4,title:"csdn",icon:"iconcsdn",color:"red",href:"https://www.zhihu.com/people/yingzhixiaoyi/posts"}]}}}];n.default=o},"74ac":function(e,n,t){"use strict";t.r(n);var o=t("0332"),i=t("1865");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("531d");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"1ecb7d78",null);n["default"]=s.exports},"74cb":function(e,n,t){var o={"./Axios请求防抖.md":"eb11","./GitHub,GitHubPages,GiteePages配置.md":"5226","./GitHubPages、giteePages建立个人博客教程.md":"ef47","./Git使用 ssh key 方式配置.md":"aa3b","./IntelliJ IDEA 2019.2破解安装.md":"02f8","./IntelliJ IDEA 2020.3破解安装.md":"d778","./Typora+PicGo+gitee 实现本地图片上传.md":"0c8b","./Windows安装Linux虚拟机.md":"9c0c","./agora声网音视频通话.md":"396e","./npm源设置.md":"4796","./uniApp 地图使用.md":"ee90","./uniApp快速开发一个安卓应用.md":"b1f1","./uniApp清除缓存.md":"46db","./uniApp请求封装.md":"13eb","./vue-cli创建uniApp项目.md":"631c","./vue.config.js 配置.md":"f038","./vue框架跨域配置.md":"be67","./vue项目使用Markdown文档.md":"e8ca","./vue项目切换主题.md":"523d","./前端极致压缩-GZIP压缩.md":"dc89","./常用技能点.md":"98d0","./百度地图 vue-baidu-map.md":"cc86","./随机风景图.md":"04c0"};function i(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id="74cb"},"7c55":function(e,n,t){"use strict";t("a7cc")},"7f18":function(e,n,t){"use strict";t.r(n);var o=t("60af"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},8959:function(e,n,t){},"8af8":function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=o(t("e3ea")),a=o(t("a298")),r=o(t("0734")),s=o(t("c428")),c={name:"app",components:{layoutHeader:i.default,layoutBody:a.default,layoutFooter:r.default,Loading:s.default},mounted:function(){window.initParams||this.openNext()},methods:{openNext:function(){var e=this;window.initParams?window.openCustomer():setTimeout((function(){e.openNext()}),2e3)}}};n.default=c},"8ef1":function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"header-search"},[t("i",{staticClass:"iconfont iconsearch",on:{click:e.click}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.searchValue,expression:"searchValue"}],ref:"searchInput",class:{show:e.show},attrs:{autofocus:"autofocus",type:"text"},domProps:{value:e.searchValue},on:{click:function(e){e.stopPropagation()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.search.apply(null,arguments)},input:function(n){n.target.composing||(e.searchValue=n.target.value)}}})])},i=[]},9037:function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t={name:"back-top",data:function(){return{show:!1}},methods:{scroll:function(){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;this.show=e>150},getTop:function(){var e=setInterval((function(){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop,t=Math.ceil(n/5);document.documentElement.scrollTop=n-t,0===n&&clearInterval(e)}),20)}},mounted:function(){window.addEventListener("scroll",this.scroll)},beforeDestroy:function(){window.removeEventListener("scroll",this.scroll)}};n.default=t},"98d0":function(e,n){var t='<h3 id="常用技能点">常用技能点</h3> <h4 id="1、路由重定向">1、路由重定向</h4> <pre><code> // 路由重定向\n    {\n        path: &#39;/&#39;, redirect: &#39;/login&#39;,\n\n        meta: {\n            hidden: true,\n            title: &#39;主页面&#39;\n            }\n    }</code></pre><h4 id="2、添加伪元素">2、添加伪元素</h4> <pre><code>子绝父相\n.Highlight {\n  position: relative;\n  color: #c03131;\n}\n.Highlight::after {\n  content: &quot;&quot;;\n  width: 100%;\n  height: 2px;\n  position: absolute;\n  top: 32px;\n  left: 0px;\n  background-color: #c03131;\n}</code></pre><h4 id="3、清除滚动条">3、清除滚动条</h4> <pre><code>.content {\noverflow-x: scroll;\n}\n利用伪元素隐藏滚动条\n.content::-webkit-scrollbar {\n  overflow-x: hidden;\n  display: none;\n}</code></pre><h4 id="4、无限下拉加载">4、无限下拉加载</h4> <pre><code> &lt;div @scroll=&quot;onScroll&quot;&gt; &lt;/div&gt;\n  onScroll(e) {\n                let scrollTop = e.target.scrollTop\n                let scrollHeight = e.target.scrollHeight\n                let offsetHeight = Math.ceil(e.target.getBoundingClientRect().height)\n                let currentHeight = scrollTop + offsetHeight\n                if (currentHeight &gt;= scrollHeight &amp;&amp; this.scrollFlag) {\n                    this.scrollFlag = false\n                    this.searchModel.pageNo++\n                    this.getList(() =&gt; {\n                        this.scrollFlag = true\n                    })\n                }\n            },\n\n // 无限下拉\ncreated() {\n    this.gitList();\n    //添加滚动事件\n    window.addEventListener(&quot;scroll&quot;, this.scroll);\n  }，\nmethods:{\n  scroll() {\n      //滚动卷出的高度\n      let scrollTop =\n        window.pageYOffset ||\n        document.documentElement.scrollTop ||\n        document.body.scrollTop;\n        //屏幕的高度\n      let screenH = window.screen.height;\n      //内容页面的高度\n      let pageH = document.documentElement.offsetHeight;\n      if (scrollTop + screenH + 10 &gt;= pageH) {\n      //节流 为真进入，否则不进入\n        if (this.flag) {\n          this.page++;\n          this.flag = false;\n          this.getList(this.page);\n        }\n      }\n    },\n    getList(page) {\n      let url = &quot;/product/list?pageNum=&quot; + page;\n      this.$axios\n        .get(url)\n        .then(res =&gt; {\n          // console.log(&quot;res&quot;, res);\n          if (res.list.length == 0) {\n          //移除滚动事件\n            window.removeEventListener(&quot;scroll&quot;, this.scroll);\n          } else {\n            this.list = [...this.list, ...res.list];\n            //数据回来后，把节流打开\n            this.flag = true;\n          }\n        })\n        .catch(err =&gt; {\n          console.log(&quot;err&quot;, err);\n        });\n    },\n  }\n</code></pre><h4 id="5、localstorage本地储存">5、localStorage本地储存</h4> <pre><code>存数据\nlocalStorage.setItem(&quot;hotCity&quot;, this.textContent)\n取数据\ndocument.querySelector(&quot;.location span&quot;).innerHTML = `${localStorage.getItem(&quot;hotCity&quot;)}`</code></pre><h4 id="6、拓展运算符">6、拓展运算符</h4> <pre><code>this.list=[...this.list,...res.list]\nthis.list={...this.list,...res.list}</code></pre><h4 id="7、vue路由跳转新页面置顶">7、Vue路由跳转新页面置顶</h4> <pre><code>//在路由表中使用\nconst router = new Router({\n    //滚动行为置顶：代进入路由，即开始y轴置顶\n  scrollBehavior: () =&gt; ({\n    y: 0\n  }),\n\n  routes\n});\n\n\n//在局部组件中使用，其实原理很简单 就是在页面加载完毕后 把滚动条的距离设置为（0，0） 就解决了!\nmounted () \n {\n    this.$router.afterEach((to, from, next) =&gt; {\n        window.scrollTo(0, 0)\n    })\n}\n\n</code></pre><h4 id="8、路由传参">8、路由传参</h4> <pre><code>//动态路由传参 URL后带参数，需要传多个数据，就在路由表和path后面多加变量\n:to=&quot; ` /list/ ${ id }${ id } `  &quot;\n//   直接调用$router.push 实现携带参数的跳转\n        this.$router.push({\n          path: `/describe/${id}`,\n          需要对应路由配置如下：\n          { path: &#39;/describe/:id/:money&#39;,\n             name: &#39;Describe&#39;,\n             component: Describe }\n\n//获取参数方法\nthis.$route.params.id\n\n\n\nname -- params  优点：URL上不显示其他信息 缺点：需要在路由表中添加 name，页面刷新空白\nthis.$router.push({ name: &quot;购物车&quot;, params: { list: list } });\n\nthis.$router.push({\n          name: &#39;Describe&#39;,\n          params: {id: id}\n        })\n\n\npath -- query  优点：直接传参，不需要写路由表name 缺点：URL后有乱码 ，页面刷新空白\nthis.$router.push（path:&#39;/&#39;,query:{data:data})</code></pre><h4 id="9、路由返回上一层">9、路由返回上一层</h4> <pre><code>go() {\n      this.$router.go(-1);\n    },</code></pre><h4 id="10、filtermapforeach数组过滤">10、filter/map/forEach数组过滤</h4> <pre><code> let cartList = res.list;\n             //return 返回需要的判定结果    \n          let cartListNum = cartList.filter(item =&gt; {\n             return item.productId == this.list.productId;\n          });\n          this.num=cartListNum[0].buyNum\n</code></pre><pre><code> //.includes 判断数组中是否含有这项，有则返回true，否则false\n let submitList=[]\n moneyList.forEach(item=&gt;{\n         if(!submitList.includes(item.productId)){\n           submitList.push(item.productId)\n         }\n      });\n  console.log(submitList)</code></pre><h4 id="11、computed计算监听用法">11、computed计算监听用法</h4> <pre><code>computed: {\n    //定义一个变量，届时需要return返回一个值\n    money() {\n      let moneyList = this.list.filter(item =&gt; {\n        return item.checked;\n      });\n      console.log(moneyList);\n      let num = 0;\n      //forEach循环遍历\n      moneyList.forEach(item =&gt; {\n        num += item.price * item.buyNum;\n      });\n      return num\n    }\n  },</code></pre><h4 id="12、vuex的使用">12、vuex的使用</h4> <pre><code>//store 页面\nimport Vue from &#39;vue&#39;;\nimport Vuex from &#39;vuex&#39;;\nimport createPersistedState from &#39;vuex-persistedstate&#39;\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    plugins: [createPersistedState()], //本地持久化\n    state: {\n        phone: &#39;&#39;,\n        token: &#39;&#39;,\n        userId: &#39;&#39;,\n    },\n    mutations: {\n        updatephone(state, play) {\n            return state.phone = play\n        },\n        updatetoken(state, play) {\n            return state.token = play\n        },\n        updateuserId(state, play) {\n            return state.userId = play\n        }\n    },\n    actions: {},//异步\n});\n\n//main.js页面\nimport store from &#39;./store/index&#39;;\nnew Vue({\n    router,\n    store,\n    render: h =&gt; h(App),\n}).$mount(&#39;#app&#39;);\n\n//存数据\n         this.$store.commit(&#39;updatephone&#39;,res.result.phone)\n//取数据\n          console.log(this.$store.state.phone);</code></pre><h4 id="13、mixin的用法">13、mixin的用法</h4> <pre><code>//导出到main.js 引入并使用 作用是将公共的方法抽取出来，可以作为全局或者局部使用。 使用方法是 this.$loading(true) \nexport default {\n    data() {\n        return {\n\n        }\n    },\n    //实现全局 过滤效果 效果较好\n    // 使用&lt;span class=&quot;price&quot;&gt;{{item.price | formatMoney }}&lt;/span&gt;\n\n     filters: {\n    fomatDate(time) {\n      let date = new Date(time);\n      let Y = date.getFullYear();\n      let M = date.getMonth() + 1;\n      let D = date.getDate();\n      return `${Y}年-${M}月-${D}日`;\n      }\n    },\n\n\n\n    methods: {\n        // 实现格式化时间  使用：this.$dataFormat(time，type) time 是时间戳，type是显示 时分秒\n        //&lt;p&gt;下单时间&amp;nbsp;&amp;nbsp;{{this.$dataFormat(list.updateTime,&#39;yy&#39;)}}&lt;/p&gt;\n        //type 为 字符串 \n        $dataFormat(time, type) {\n            let date = new Date(time);\n            let year = date.getFullYear(),\n                month = date.getMonth() + 1,\n                day = date.getDate(),\n                h = date.getHours(),\n                m = date.getMinutes(),\n                s = date.getMinutes();\n            month = month &lt; 10 ? `0${month}` : month\n            day = day &lt; 10 ? `0${day}` : day\n            h = h &lt; 10 ? `0${h}` : h\n            m = m &lt; 10 ? `0${m}` : m\n            s = s &lt; 10 ? `0${s}` : s\n            if (type) {\n                return `${year}-${month}-${day} ${h}:${m}:${s}`;\n            } else {\n                return `${year}-${month}-${day}`;\n            }\n\n        },\n        //实现全区引用loading   使用：this.$loading(true/false)\n        $loading(flag) {\n            if (flag) {\n                this.$toast.loading(&quot;努力加载中...&quot;);\n            } else {\n                this.$toast.clear();\n            }\n        }\n\n    },\n}\n\n在main.js中 引入 注册 使用\nimport mixin from &#39;./mixin/index&#39;\nVue.mixin(mixin)\nnew Vue({\n    router,\n    store,\n    render: h =&gt; h(App),\n}).$mount(&#39;#app&#39;);</code></pre><h4 id="14、token和axios拦截器">14、token和axios拦截器</h4> <pre><code>//新建utils文件，新建request.js文件。作用1 是 初步拦截url,使其只写后面不同不同部分即可，使用时 使用this.$axios.get||post ();作用2 是在 XHR请求头上每次都加上 token 数据，以用为辨认用户使用\nimport axios from &#39;axios&#39;\nimport store from &quot;../store/index&quot;;\n//切换环境变量\nlet env = process.env.NODE_ENV;\nlet baseURL;\nif (env === &quot;development&quot;) {\n    baseURL = &quot;http://test.huruqing.cn:3007/&quot;;\n} else if (env === &#39;production&#39;) {\n    baseURL = &quot;http://test.huruqing.cn:3007/&quot;;\n}\n\n// 创建axios实例\nlet service = axios.create({\n    baseURL: baseURL, // api的base_url\n    timeout: 5000 // 请求超时时间\n})\n\n// request拦截器,在请求之前做一些处理\nservice.interceptors.request.use(\n    config =&gt; {\n        if (store.state.token) {\n            // 给请求头添加user-token\n            config.headers[&quot;user-token&quot;] = store.state.token;\n        }\n        return config;\n    },\n    error =&gt; {\n        console.log(error); // for debug\n        return Promise.reject(error);\n    }\n);\n\n//response拦截器\nservice.interceptors.response.use(res =&gt; {\n    //在响应前做的事情\n    if (res.data.code == 666) {\n        return res.data\n    } else {\n        return Promise.reject(res.data.msg);\n    }\n\n},\n    error =&gt; {\n        return Promise.reject(error)\n    });\n\nexport default service</code></pre><h4 id="15、keep-alive-缓存-父管子-子的路由表添加-keepalive-true">15、keep-alive 缓存 父管子 子的路由表添加 keepAlive: true</h4> <pre><code class="language-javascript">// router的配置\n{\n    &quot;list&quot;,\n    meta;: {\n         &quot;商品列表&quot;,\n      keepAlive;: true //表示需要缓存\n    },\n    () =&gt; import(&quot;@/views/product/list/index&quot;)\n},</code></pre> <pre><code class="language-vue">// app.vue配置\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;keep-alive&gt;\n      &lt;router-view v-if=&quot;$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;\n    &lt;/keep-alive&gt;\n    &lt;router-view v-if=&quot;!$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</code></pre> <h4 id="16、组件内的路由守卫">16、组件内的路由守卫</h4> <pre><code> data() {\n    return {\n      // 从哪个页面跳过来\n      from: &quot;&quot;,\n    };\n  },\n\n  beforeRouteEnter(to, from, next) {\n    // 不！能！获取组件实例 `this`\n    // 因为当守卫执行前，组件实例还没被创建\n    // console.log(&#39;router&#39;,this);\n    console.log(to.path, from.path);\n    next(vm =&gt; {\n      // 通过 `vm` 访问组件实例---连接this vm.from===this.from\n      console.log(vm.from);\n      vm.from = from.path;\n    });\n  },\n\n// !!! next(vm=&gt;{console.log(‘next’) }) !!!\n//这个里面的代码很晚执行，执行时机在组件mounted周期之后.在方法中可以拿到和使用\n\n\n//实例演示\nbeforeRouteEnter (to, from, next) {\n      next(vm =&gt; {\n          if (to.params.orderLogId) {\n            console.log(&#39;id&#39;,to.params.orderLogId )\n            vm.searchModel.orderLogId=to.params.orderLogId\n            vm.search()\n          }\n      })\n    },</code></pre><h4 id="17、正则表达式">17、正则表达式</h4> <p>​ 0.语言过滤</p> <pre><code>//语言过滤\n  langFilter(list){\n    let rest=/[\\u4e00-\\u9fa5]/gm\n    let arr=[]\n    list.forEach(item=&gt;{\n      for (let key in item) {\n        arr.push({\n              name: item[key].match(rest).join(&#39;&#39;),\n              value: key\n            })\n          }\n    })\n    return arr\n  }</code></pre><ol> <li><p>创建正则表达式对象</p> <pre><code>let nameReg = /huruqing/;\nlet str = &#39;asdfasdfhuruqingasdfasdfasdfhuruqing&#39;</code></pre></li> <li><p>使用正则进行匹配</p> <ul> <li><p>test 检查某个字符串是否符合指定的正则</p> </li> <li><p>match 检查字符串里符合正则条件的,把结果放入一个数组</p> <pre><code>let nameReg = /huruqing/;\nlet str = &#39;23j42j34k23jjhuruqingasdfasdf&#39;;\nnameReg.test(str); // \n</code></pre></li> </ul> </li> <li><p>^ 匹配开头和$ 结尾</p> <pre><code>let nameReg = /^huruqing$/;\nlet str = &#39;asdfasdfhuruqing&#39;;\nnameReg.test(str);  // false,必须以h开头,以g结尾</code></pre></li> <li><p>匹配数字</p> <pre><code>let reg = /\\d/;\nlet str = &#39;234234&#39;;\nreg.test(str);</code></pre></li> <li><p>重复匹配 {}</p> <ul> <li>{3} 表示重复3次</li> <li>{2,6} 表示重复2次到6次都符合</li> </ul> </li> <li><p>或匹配</p> <p>1,[xyz] x,y,z任意一个都能匹配</p> </li> <li><p>js过滤空格</p> <ul> <li>tempKeyWord.replace(/ /g,&#39;&#39;)</li> </ul> </li> </ol> <p>​ </p> <p>简单的手机号码匹配</p> <pre><code class="language-javascript">let reg = /^1[3-9]\\d{9}$/;\nlet str = &#39;13800000000&#39;;\nreg.test(str);</code></pre> <p>简单的密码匹配6~20位数字,字母,下划线的组合</p> <pre><code>let reg = /^\\w{6,20}$/\nlet str = &#39;asdf23232323&#39;;\nreg.test(str);</code></pre><p>匹配对象 及对象内容</p> <pre><code>  let str=message.match(/{}/)\n  let arr = message.match(/\\{[^\\}]+\\}/);\n  console.log(arr, 384,str)//{}  {max}</code></pre><h4 id="18、阻止form表单的默认行为">18、阻止form表单的默认行为</h4> <pre><code>//阻止form表单的默认行为    /a标签\n &lt;form onsubmit=&quot;return false;&quot;&gt;&lt;/form&gt;</code></pre><h4 id="19、vant-ui地址栏组件使用">19、vant ui地址栏组件使用</h4> <pre><code>    &lt;van-cell is-link @click=&quot;showPopup&quot;&gt;\n      &lt;span class=&quot;spone&quot;&gt;配送至：&lt;/span&gt;\n      &lt;span class=&quot;sptwo&quot;&gt;{{str}}&lt;/span&gt;\n    &lt;/van-cell&gt;\n    &lt;van-popup v-model=&quot;show&quot; position=&quot;bottom&quot;&gt;\n      &lt;van-area\n        :area-list=&quot;areaList&quot;\n        @confirm=&quot;select&quot;\n        :columns-placeholder=&quot;[&#39;省&#39;, &#39;市&#39;, &#39;区&#39;]&quot;\n        title=&quot;标题&quot;\n      /&gt;\n    &lt;/van-popup&gt;\n\n\n    import areaList from &quot;@/assets/address.js&quot;;\n\n    data() {\n    return {\n      str:&#39;广东省 深圳市 罗湖区 &#39;,\n      show: false,\n      areaList: areaList\n      }},\n    methods: {\n    showPopup() {\n      this.show = true;\n    },\n    select(value) {\n      console.log(value);\n      let arr=value.map(item=&gt;{\n        return item.name\n      })\n      this.str=arr.join(&#39;-&#39;)\n      console.log(this.str);\n      this.show = false\n\n    }\n  }</code></pre><h4 id="20、父传子-组件传参">20、父传子 组件传参</h4> <pre><code>//父组件自定义属性传参\n&lt;coupon :moneys=&#39;money&#39;&gt;&lt;/coupon&gt;\n//子组件接受 在方法中直接打印或使用，在created 里面打印不出来\nprops:[&#39;moneys&#39;],\nconsole.log(this.moneys);\n\n父传子总结：\n子组件在props中创建一个属性，用以接收父组件传过来的值\n父组件中注册子组件\n在子组件标签中添加子组件props中创建的属性\n把需要传给子组件的值赋给该属性\n\n//子传父\n\n//子组件操作 设置按钮触发， 传参！！！￥emit中，先定义一个 名字，这个名字就是父组件的事件名字。\n&lt;button @click=&quot;send&quot;&gt;&lt;/button&gt;\n        this.send(data)\nsend(data){this.$emit(&#39;data&#39;,data)},\n\n\n //父组件操作，用子组件定义的名字 来设立一个事件接收。\n &lt;coupon :money=&#39;money&#39; @data=&quot;data&quot;&gt;&lt;/coupon&gt;\n data(data){console.log(&#39;data&#39;,data);},\n\n\n</code></pre><h4 id="21、浮点数取整，保留两位小数点">21、浮点数取整，保留两位小数点</h4> <pre><code> computed: { //监听\n    money() {\n      let moneyNum = 0;\n      this.list.forEach(item =&gt; {\n        moneyNum += item.buyNum * item.price;\n      });\n      let num = (moneyNum - this.couponadd) * this.couponaddmul;\n      num = Math.ceil(num).toFixed(2); //分数计算\n      return num/100; // 最后/100，返回元单位\n    }\n  },</code></pre><h4 id="22、按需登陆">22、按需登陆</h4> <pre><code>//拦截器设置\nimport router from &#39;../router&#39;;\n\n//response拦截器\nservice.interceptors.response.use(res =&gt; {\n    //在响应前做的事情\n    if (res.data.code == 666) {\n        return res.data\n    } else if(res.data.code == 603){\n        //如果返回的是603 就是没登录状态，就跳转到登陆\n        router.push(&#39;/login&#39;)\n    } else {\n        return Promise.reject(res.data.msg);\n    }\n\n},\n    error =&gt; {\n        return Promise.reject(error)\n    });\n\n//vuex设置\nconst store = {\n    plugins: [createPersistedState()], //本地持久化\n    state: {\n        phone: &#39;&#39;,\n        token: &#39;&#39;,\n        userId: &#39;&#39;,\n        productId: &#39;&#39;,\n        islogin: false,\n\n        addressname: &#39;&#39;,\n        addresstel: &#39;&#39;,\n        address: &#39;&#39;\n    },\nexport  {store} //存储个人信息数据，保存登陆状态\n\n//路由表设置\nrouter.beforeEach((to, form, next) =&gt; {\n  let islogin = store.state.islogin\n  // 修改网页标题\n  document.title = to.meta.title;\n  // 按需登录\n  if (to.meta.needLogin &amp;&amp; !islogin) {\n    next({ path: &#39;/login&#39; });\n  } else {\n    next();\n  }\n})\n\nexport default router\n//导入vuex,判断该页面是否需要登陆和登陆状态 二者都为假，则跳转登陆页面\n\n meta: {\n        title: &#39;每日生鲜&#39;,\n        needLogin: true\n      }, // 路由表加meta</code></pre><h4 id="23、rem配置">23、rem配置</h4> <p>1安装手淘的flexible,插件名称叫amfe-flexible 和 安装 postcss-pxtorem</p> <pre><code class="language-javascript">npm; i; amfe-flexible --;save-dev;\nnpm; i; postcss-pxtorem --;save-dev\n\n</code></pre> <p>2在main.js导入</p> <pre><code>import &#39;amfe-flexible&#39;\nimport &#39;postcss-pxtorem&#39;</code></pre><p>3在/vue.config.js添加px2rem插件,把项目中的px转为rem</p> <pre><code class="language-javascript">const autoprefixer = require(&quot;autoprefixer&quot;);\nconst pxtorem = require(&quot;postcss-pxtorem&quot;);\nmodule.exports = {\n    // 资源路径\n   publicPath: &#39;/web04/chencan-fresh/dist/&#39;,\n    // 关闭eslint检查\n    lintOnSave: false,\n    // 配置css前缀,px转rem\n    css: {\n      loaderOptions: {\n          // 后处理器配置\n        postcss: {\n          plugins: [\n            // 配置样式前缀\n            autoprefixer(),\n            // 把px转为rem\n            pxtorem({\n              rootValue: 37.5,\n              propList: [&quot;*&quot;] //是乘号*\n            })\n          ]\n        }\n      }\n    },\n}</code></pre> <h4 id="24、-async--await-promise的使用">24、 async await promise的使用</h4> <pre><code>Toast() {\n      let promise = new Promise((resolve, reject) =&gt; {\n            resolve(true); //返回true的值之后\n      });\n      return promise;\n    },\n\n    this.$axios\n            .post(url, data)\n            .then(//配合await使用// async res =&gt; {\n              await this.Toast();// 在这个时候使用，执行完await 之后再往下执行代码\n              this.$router.push(`/order/detail/${this.orderId}`);\n            })</code></pre><h4 id="25、toast-轻提示-的回调函数">25、Toast 轻提示 的回调函数</h4> <pre><code> Toast(callback) {//回调函数变量\n        const toast = Toast.loading({\n          duration: 0, // 持续展示 toast\n          forbidClick: true,\n          message: &quot;正在支付&quot;\n        });\n\n        let second = 3;\n        const timer = setInterval(() =&gt; {\n          second--;\n          if (second) {\n            toast.message = `支付中 ${second} 秒`;\n          } else {\n            clearInterval(timer);\n            // 手动清除 Toast\n            Toast.clear();\n            callback();//等待上方操作完成后再执行此回调函数\n          }\n        }, 1000);\n    },\n\n//调用回调函数时，传一个自执行函数过去，\nthis.Toast(() =&gt; {this.$router.push(`/order/detail/${this.orderId}`); });</code></pre><h4 id="26、点击刷新页面">26、点击刷新页面</h4> <pre><code>之前一直都是简单粗暴的方法：window.location.reload();\n今天发现了个比较委婉的:this.$router.go(0)</code></pre><h4 id="27、html文件启服务，启动本地文件，地址目录变为http，防止跟file协议冲突，解决跨域">27、html文件启服务，启动本地文件，地址目录变为HTTP，防止跟file协议冲突，解决跨域</h4> <pre><code>// 全局加载，启服务\nnpm i http-server -g\n\n//使用方式  ------ 在需要启动的HTTP文件目录下，打开命令窗口，使用下方命令\nhttp-server -o</code></pre><h4 id="28、强制一行显示，多余隐藏，显示点点点">28、强制一行显示，多余隐藏，显示点点点</h4> <pre><code>  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;</code></pre><h4 id="29、遍历删除多数对象数据">29、遍历删除多数对象数据</h4> <pre><code>  //对象删除元素\n  deleteObj (obj, arr) {\n    arr.forEach(item =&gt; {\n      delete obj[item]\n    })\n    return obj\n  }\n\n  //Ergodic 遍历去除多余数据\n  Ergodic(obj1,obj2){\n    let arr1=[]\n    let arr2=[]\n    for(let key in obj1){\n      arr1.push(key)\n    }\n    for(let key in obj2){\n      arr2.push(key)\n    }\n    let filterList=[]\n    arr1.forEach(item=&gt;{\n      if(!arr2.includes(item)){\n        filterList.push(item)\n      }\n    })\n  return filterList\n  }</code></pre><h4 id="30、短路运算符">30、短路运算符</h4> <pre><code>&amp;&amp;(与号符)为取假运算，从左到右依次判断，如果遇到一个假值，就返回假值，以后不再执行，否则返回最后一个真值；\nlet arr\nlet flag=&#39;123&#39;&amp;&amp;arr&amp;&amp;&#39;aa&#39;\nconsole.log(flag);//谁假取谁\n||(或号符)为取真运算，从左到右依次判断，如果遇到一个真值，就返回真值，以后不再执行，否则返回最后一个假值。\nlet arr\nlet flag=arr||&#39;123&#39;||&#39;aa&#39;\nconsole.log(flag);//谁真取谁\n\n//短路运算符和 if判断式\nif（xxx&gt;= 0 &amp;&amp; xxx&lt;=100)\n从左到右判断第一个错了后面就不判断了\nfunction goTest(xxx) {\n    console.log(&#39;进入函数体&#39;);\n    if (xxx &gt;= 30 || xxx &lt;= 100) {\n        console.log(&#39;条件成立！！！&#39;)\n    } else {\n        console.log(&#39;条件不成立！！！&#39;)\n    }\n}\ngoTest(20)\n从左到右判断有一个对了就执行</code></pre><h4 id="31、解构赋值">31、<a href="https://segmentfault.com/a/1190000017312226">解构赋值</a></h4> <h4 id="32复制粘贴">32.复制粘贴</h4> <pre><code>   // 复制\n    copy () {\n      var clipboard = new Clipboard(&#39;.tag-read&#39;)\n      clipboard.on(&#39;success&#39;, e =&gt; {\n        // 释放内存\n        clipboard.destroy()\n      })\n      clipboard.on(&#39;error&#39;, e =&gt; {\n        // 不支持复制\n        // 释放内存\n        clipboard.destroy()\n      })\n    }\n\n\n\n   //js复制\n    let dom = document.createElement(&#39;input&#39;);\n                      document.body.appendChild(dom)\n                      dom.value = params.row.withdrawAmount;\n                      console.log(dom,281,dom.value)\n                      dom.select();\n                      document.execCommand(&#39;Copy&#39;,false);\n                      dom.remove()</code></pre><h4 id="32、电脑不能安装cnpm不能全局安装插件的解决方法">32、电脑不能安装cnpm,不能全局安装插件的解决方法</h4> <pre><code>//1,先检查nodejs版本，下载最新版本\n//2，npm ERR! code EPERM \n//     npm ERR! errno -4048\n解决方式\n简单粗暴 直接删文件\n\n方法1：\n需要删除npmrc文件。\n\n强调：不是nodejs安装目录npm模块下的那个npmrc文件\n\n而是在C:\\Users{账户}\\下的.npmrc文件…\n注意：这个文件默认是被隐藏，一定要选择将隐藏取消掉\n\n//删除 这个文件后，就可以全局安装插件了\n\n//3、C:\\Users\\hp\\AppData\\Roaming\\npm\\cnpm.ps1，因为在此系统上禁止运行脚本\n解决方法:\n1.\n以管理员身份运行power shell\n2.\n输入set-ExecutionPolicy RemoteSigned\n然后输入A 回车\n问题解决\n\n</code></pre><h4 id="33、判断是一个数组是数组，判断一个对象是对象">33、判断是一个数组是数组，判断一个对象是对象</h4> <pre><code>const a = [];\nconst b = {};\nArray.isArray(a);//true\nArray.isArray(b);//false\n\nconst a = [];\nconst b = {};\nconsole.log(a instanceof Array);//true\nconsole.log(a instanceof Object);//true,在数组的原型链上也能找到Object构造函数\nconsole.log(b instanceof Array);//false</code></pre><h4 id="33、金额过千，逗号分隔">33、金额过千，逗号分隔</h4> <pre><code>//金额过千，使用逗号分隔\n    toThousands(num) {\n      var result = &#39;&#39;, counter = 0;\n      var dot = String(num).indexOf(&#39;.&#39;);\n      if (dot != -1) {\n        // alert(&quot;有小数点&quot;);\n        // 获取小数点后面的数字(indexOf和substring都不支持数字，所以要先转字符串才可以用)\n        var dotCnt = String(num).substring(dot + 1, num.length);\n\n        // 获取小数点前面的数字\n        num = String(num).split(&#39;.&#39;)[0]\n        num = (num || 0).toString();\n        for (var i = num.length - 1; i &gt;= 0; i--) {\n          counter++;\n          result = num.charAt(i) + result;\n          if (!(counter % 3) &amp;&amp; i != 0) {\n            result = &#39;,&#39; + result;\n          }\n        }\n        result = result + &#39;.&#39; + dotCnt;\n        return result;\n\n      } else {\n        // alert(&quot;没有小数点&quot;);\n        return (num || 0).toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, &#39;$1,&#39;);\n      }\n    }</code></pre><h4 id="34、获取本机ip">34、获取本机IP</h4> <pre><code>function getUserIP(onNewIP) { //  onNewIp - your listener function for new IPs\n      //compatibility for firefox and chrome\n      var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n      var pc = new myPeerConnection({\n         iceServers: []\n     }),\n     noop = function() {},\n     localIPs = {},\n     ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\n     key;\n\n     function iterateIP(ip) {\n         if (!localIPs[ip]) onNewIP(ip);\n         localIPs[ip] = true;\n    }\n\n      //create a bogus data channel\n     pc.createDataChannel(&quot;&quot;);\n\n     // create offer and set local description\n     pc.createOffer().then(function(sdp) {\n         sdp.sdp.split(&#39;\\n&#39;).forEach(function(line) {\n             if (line.indexOf(&#39;candidate&#39;) &lt; 0) return;\n             line.match(ipRegex).forEach(iterateIP);\n         });\n\n         pc.setLocalDescription(sdp, noop, noop);\n     }).catch(function(reason) {\n         // An error occurred, so handle the failure to connect\n     });\n\n     //sten for candidate events\n     pc.onicecandidate = function(ice) {\n         if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n         ice.candidate.candidate.match(ipRegex).forEach(iterateIP);\n     };\n}\n\n// Usage\n //使用\n  $getUserIP(\n            async (ip) =&gt; {\n                await this.setState({ip: ip})\n                return (&quot;Got IP! :&quot; + ip);\n            })\n\n data.id = this.state.ip\n        console.log(data.id)\n\ngetUserIP(function(ip){\n     alert(&quot;Got IP! :&quot; + ip);\n});</code></pre><h4 id="34、颜色过渡">34、颜色过渡</h4> <pre><code>background: linear-gradient(-21deg, #20d4f3 0%, #0890fc 100%);</code></pre><h4 id="35、格式化时区">35、格式化时区</h4> <pre><code>        formatDate(date, format = &#39;yyyy-MM-dd HH:MM:ss&#39;) {\n            let dateTypeList = {\n                &#39;zh-CN&#39;: &#39;YYYY-MM-DD HH:mm:ss&#39;,\n                &#39;zh-TW&#39;: &#39;YYYY/MM/DD HH:mm:ss&#39;,\n                &#39;en-US&#39;: &#39;MMM dd,YYYY HH:mm:ss&#39;\n            }\n            let lang = window.sessionStorage.lang\n            let datetype = dateTypeList[lang]\n            let d = new Date()  //获取当前时间\n            let v=d.getTimezoneOffset()*-1//获取当前时区\n            console.log(v)\n            console.log(moment(date).utcOffset(-360).format(datetype))//标准时间\n            console.log(moment(date).utcOffset(v).format(datetype))//当前时间时间\n            return moment(date).utcOffset(480).format(datetype)\n        },</code></pre><h4 id="36、koa跨域httpswwwjianshucomp219dd7a5bf3b">36、koa跨域[<a href="https://www.jianshu.com/p/219dd7a5bf3b">https://www.jianshu.com/p/219dd7a5bf3b</a>]</h4> <p><img src="C:%5CUsers%5Cjustin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1591518885788.png" alt="1591518885788"></p> <h4 id="37、强制更新github依赖包">37、强制更新GitHub依赖包</h4> <pre><code>npm update -S\nnpm update -D</code></pre><h4 id="38、全局使用警告对话框">38、全局使用警告对话框</h4> <pre><code>      if (e == &#39;true&#39;) {\n           vm.$Modal.confirm({\n            title: &#39;确认提示&#39;,\n            content: &#39;确认启用吗？启用完成后将开启当前验证码设置&#39;,\n            onOk() {\n              vm.model.flag = &#39;true&#39;\n            },\n            onCancel() {\n               vm.model.flag = &#39;false&#39;\n             }\n           })\n          } else {\n           vm.model.flag = &#39;false&#39;\n         }</code></pre><h4 id="39、分割线">39、分割线</h4> <pre><code>&lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;style scoped&gt;\n .box {\n    width: 100%;\n    border: 0px;\n    border-bottom: 1px dashed black;\n    margin: 20px 0;\n  }\n&lt;/style&gt;</code></pre><h4 id="40、刷新组件">40、刷新组件</h4> <pre><code>方法1：\n\n headleChange(e){\n    this.info.name = e.target.value;\n    this.$forceUpdate()\n}\n方法2：\n\n headleChange(e){\n      this.$set(this.info,&#39;name&#39;,e.target.value) \n}\n方法3：\nthis.$nextTick(()=&gt;{   })\n\n</code></pre><h4 id="41、三元表达式">41、三元表达式</h4> <pre><code>多条件判断时：\n  let title = type === &#39;edit&#39; ? &#39;编辑&#39; : type === &#39;details&#39; ? &#39;信息&#39; : &#39;新增&#39;\n嵌套条件判断时：\n  let key = a?b?c?1:2:3:4 a为真时，继续往下判断，否则等于4</code></pre><h4 id="42、鼠标hover事件改变图片颜色">42、鼠标hover事件“改变”图片颜色</h4> <pre><code>\nimg {\n    filter: grayscale(100%); \n    opacity: 0.6; \n}\n\nimg:hover {\n    filter: none; \n    opacity: 1; \n</code></pre><p>hover前</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/20180620141829390" alt="img"></p> <p>hover时</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/20180620141900303" alt="img"></p> <h4 id="43、浏览器全屏操作">43、浏览器全屏操作</h4> <pre><code>            // 全屏\n            fullscreenChange() {\n                this.fullscreen = !this.fullscreen\n                let main = document.getElementById(&#39;mapArea&#39;)\n                if (this.fullscreen) {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen()\n                    } else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen()\n                    } else if (document.webkitCancelFullScreen) {\n                        document.webkitCancelFullScreen()\n                    } else if (document.msExitFullscreen) {\n                        document.msExitFullscreen()\n                    }\n                } else {\n                    if (main.requestFullscreen) {\n                        main.requestFullscreen()\n                    } else if (main.mozRequestFullScreen) {\n                        main.mozRequestFullScreen()\n                    } else if (main.webkitRequestFullScreen) {\n                        main.webkitRequestFullScreen()\n                    } else if (main.msRequestFullscreen) {\n                        main.msRequestFullscreen()\n                    }\n                }\n            },</code></pre><h4 id="44、播放音乐">44、播放音乐</h4> <pre><code>//方式一：h5标签+js播放\n&lt;audio ref=&quot;audio&quot; id=&quot;notification-voice&quot; src=&quot;./assets/CRBT/in_busy.mp3&quot;  preload=&quot;&quot; autostart=&quot;true&quot; &gt;&lt;/audio&gt;\n\nlet audio = document.getElementById(&#39;notification-voice&#39;)\nthis.$refs.audio.play()\n\n//方式二：引入流，纯js播放\nlet a = new Audio(require(&#39;./assets/CRBT/background.mp3&#39;))\n a.load()\nthis.playPromise = a.play();\nif (this.playPromise) {//等待加载音频完成，再执行后续操作\nthis.playPromise.then(() =&gt; {// 音频加载成功\na.play()\n}).catch(() =&gt; {// 音频加载失败});}\nif (this.playPromise) {\na.pause()\na.loop = false}</code></pre><h4 id="45、拖拽移动标签">45、拖拽移动标签</h4> <pre><code> //class需要是position状态，vm.isDown是拖拽开关，\n &lt;div class=&quot;videoPop&quot; v-show=&quot;showVideo&quot; id=&quot;move_div&quot; @mousedown=&quot;changePd&quot; @mouseup=&quot;changePu&quot;&gt;&lt;/div&gt;\n    changePu() {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //开关关闭\n                vm.isDown = false;\n                dv.style.cursor = &#39;default&#39;;\n                vm.changeMove()\n            },\n     changePd(e) {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //获取x坐标和y坐标\n                vm.x = e.clientX;\n                vm.y = e.clientY;\n\n                //获取左部和顶部的偏移量\n                vm.l = dv.offsetLeft;\n                vm.t = dv.offsetTop;\n                //开关打开\n                vm.isDown = true;\n                //设置样式\n                dv.style.cursor = &#39;move&#39;;\n                vm.changeMove()\n            },\n    changeMove() {\n                let vm = this\n                let dv = document.getElementById(&#39;move_div&#39;)\n                //鼠标移动\n                window.onmousemove = function (e) {\n                    if (!vm.isDown) {\n                        return;\n                    }\n                    //获取x和y\n                    let nx = e.clientX;\n                    let ny = e.clientY;\n                    //计算移动后的左偏移量和顶部的偏移量\n                    let nl = nx - (vm.x - vm.l);\n                    let nt = ny - (vm.y - vm.t);\n\n                    dv.style.left = nl + &#39;px&#39;;\n                    dv.style.top = nt + &#39;px&#39;;\n                }\n            },</code></pre><h4 id="46、区分浏览器刷新和关闭">46、区分浏览器刷新和关闭</h4> <pre><code>let _beforeUnload_time = 0, _gap_time = 0;\nwindow.onunload = function (){\n    _gap_time = new Date().getTime() - _beforeUnload_time;\n    if(_gap_time &lt;= 5){\n        // 刷新时onbeforeunload与onunload的时间差一般都远大于5\n        // 浏览器关闭\n        localStorage.setItem(&#39;testOut&#39;, &#39;浏览器关闭&#39;)\n    } else {\n        // 浏览器刷新\n        // localStorage.setItem(&#39;testOut&#39;, &#39;浏览器刷新&#39;)\n    }\n}\nwindow.onbeforeunload = function (){\n    // 刷新或关闭页面都会执行，且先于onunload执行\n    _beforeUnload_time = new Date().getTime();\n};</code></pre><h4 id="47、生产环境关闭所有consolelog">47、生产环境关闭所有console.log</h4> <pre><code>//新建babel.config.js文件 cnpm i babel-plugin-transform-remove-console\nconst plugins = [[&#39;@babel/plugin-transform-modules-commonjs&#39;, { &#39;strictMode&#39;: false }]]\n/* 生产环境移除console */\nif (process.env.NODE_ENV === &#39;production&#39;) {\n  plugins.push(&#39;transform-remove-console&#39;)\n}\nmodule.exports = {\n  presets: [\n    &#39;@vue/app&#39;,\n    [&#39;@babel/preset-env&#39;, {\n      useBuiltIns: &#39;entry&#39;\n    }]\n  ],\n  plugins: plugins\n  // [\n  //   // [&#39;import&#39;, {\n  //   //   &#39;libraryName&#39;: &#39;view-design&#39;,\n  //   //   &#39;libraryDirectory&#39;: &#39;src/components&#39;\n  //   // }],\n  //   [&#39;@babel/plugin-transform-modules-commonjs&#39;, { &#39;strictMode&#39;: false }]\n  // ]\n}</code></pre><p>48、转base64格式文件</p> <pre><code> //线上资源转base64\n    getBase64ImageFromOnline(img) {\n      let canvas = document.createElement(&#39;canvas&#39;);\n      canvas.width = img.width;\n      canvas.height = img.height;\n      let ctx = canvas.getContext(&#39;2d&#39;); //获取绘图上下文环境\n      ctx.drawImage(img, 0, 0, img.width, img.height); //在canvas中画图\n      let dataURL = canvas.toDataURL(&#39;image/png&#39;); //可选其他值 image/jpeg\n      return dataURL;\n    },\n\n // file文件转base64\n    getBase64Image(file) {\n        return new Promise(resolve =&gt; {\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                let path = this.result;\n                resolve(path);\n            };\n        });\n    },</code></pre>';e.exports=t},"99f6":function(e,n,t){e.exports=t.p+"static/img/justin.b59225d4.jpg"},"9c0c":function(e,n){var t='<h2 id="windows安装linux虚拟机">Windows安装Linux虚拟机</h2> <h5 id="安装ubuntu">安装Ubuntu</h5> <p>可在Microsoft Store中搜索下载，或网上另找资源，正常安装打开，如遇到安装注册报错，请设置启动适用于Linux的Windows子系统选项</p> <p>步骤：控制面板 —&gt; 启动或关闭Windows功能 —&gt; 勾选适用于Linux的Windows子系统</p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/LiOoWZAE8szFI3d.png" alt="image-20210408120707854"></p> <h5 id="进入虚拟机">进入虚拟机</h5> <pre><code>bash (进入虚拟机操作)\n\nsudo apt-get update (更新下载，开启下载功能)\n\nsudo apt install nodejs (下载node)</code></pre><p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20210408122121013.png" alt="image-20210408122121013"></p> <h5 id="24-前端项目运行安装nodejs和yarn相关配置">2.4 前端项目运行安装nodejs和yarn相关配置</h5> <p>同样是打开Terminal窗口，配置相关环境（查看项目中的README.md文件，下面代码供参考，每个项目可能不一样）：</p> <pre><code>###node jscurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -sudo apt-get install -y nodejs\n###yarn安装curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | sudo tee /etc/apt/sources.list.d/yarn.listsudo apt-get update &amp;&amp; sudo apt-get install yarn\n###私有仓库地址npm set registry http://192.168.0.200:4873yarn config set registry http://192.168.0.200:4873yarn config set ignore-engines true\n###编译环境sudo yarn\n### 启动yarnsudo yarn start</code></pre>';e.exports=t},a089:function(e,n,t){"use strict";t("34a9")},a18c:function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("8931"),t("3b2f"),t("cb0b"),t("47b0");var i=o(t("2c3f")),a=o(t("8aaf")),r=o(t("4360"));i.default.use(a.default);var s=[{path:"/",name:"Home",component:function(){return t.e("chunk-46d2d591").then(t.bind(null,"bb51"))},meta:{title:"首页"}},{path:"/search/:words",name:"search",component:function(){return t.e("chunk-46d2d591").then(t.bind(null,"bb51"))},meta:{title:"搜索",params:"words"}},{path:"/contents",name:"文章",component:function(){return t.e("chunk-5573a999").then(t.bind(null,"b6eb"))},meta:{title:"contents"}}],c=new a.default({mode:"history",base:"",routes:s});c.beforeEach((function(e,n,t){var o="Justin";o=e.meta.params?"".concat(e.meta.title,":").concat(e.params[e.meta.params]||""," - ").concat(o):"".concat(e.meta.title," - ").concat(o),document.title=o,e.path!==n.path&&r.default.dispatch("setLoading",!0),t()})),c.afterEach((function(e,n){window.scrollTo(0,0),setTimeout((function(){r.default.dispatch("setLoading",!1)}),1500)}));var l=c;n.default=l},a1b8:function(e,n,t){},a298:function(e,n,t){"use strict";t.r(n);var o=t("ef4d"),i=t("c64a");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("e4d4");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"8a4375ba",null);n["default"]=s.exports},a342:function(e,n,t){},a3f7:function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("e50e");var i=o(t("efa5")),a=t("365c"),r={name:"layout-header",components:{HeaderSearch:i.default},data:function(){return{lastScrollTop:0,fixed:!1,hidden:!1,category:[],mobileShow:!1}},computed:{topWidth:function(){return window.outerWidth<750}},mounted:function(){window.addEventListener("scroll",this.watchScroll),this.fetchCategory()},beforeDestroy:function(){window.removeEventListener("scroll",this.watchScroll)},methods:{watchScroll:function(){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;0===e?this.fixed=!1:e>=this.lastScrollTop?(this.fixed=!1,this.hidden=!0):(this.fixed=!0,this.hidden=!1),this.lastScrollTop=e},fetchCategory:function(){var e=this;(0,a.fetchCategory)().then((function(n){e.category=n.data})).catch((function(e){}))}}};n.default=r},a58f:function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("4856"),t("5f22");var o={name:"header-search",data:function(){return{searchValue:"",show:!1}},watch:{show:function(e){e?document.body.addEventListener("click",this.close):document.body.removeEventListener("click",this.close)}},methods:{search:function(){this.$router.push({name:"search",params:{words:this.searchValue}}),this.close(),this.searchValue=""},click:function(){this.show=!this.show,this.show&&this.$refs.searchInput&&this.$refs.searchInput.focus(),this.searchValue&&this.search()},close:function(){this.$refs.searchInput&&this.$refs.searchInput.blur(),this.show=!1}}};n.default=o},a7c1:function(e,n,t){},a7cc:function(e,n,t){},a9c7:function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t={name:"loading",computed:{loading:function(){return this.$store.state.loading}},watch:{loading:{immediate:!0,handler:function(e,n){var t=document.querySelector("body");t.style.overflowY=e?"hidden":"auto"}}}};n.default=t},aa3b:function(e,n){var t='<h2 id="git使用-ssh-key-方式配置">Git使用 ssh key 方式配置</h2> <h3 id="1git官网下载安装git客户端：httpsgit-scmcomdownloads">1.Git官网下载安装git客户端：<a href="https://git-scm.com/downloads/">https://git-scm.com/downloads/</a></h3> <h3 id="2安装完成后，在空白处点鼠标右键选择git-bush-here-，打开git-bash命令窗口">2.安装完成后，在空白处点鼠标右键选择“Git Bush Here” ，打开git bash命令窗口</h3> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeaaed7e5ff.png" alt="img"></p> <h3 id="3配置用户名和邮箱">3.配置用户名和邮箱</h3> <p>git config —global user.name “richard” git config —global user.email “<a href="mailto:richard@yingtai.net">richard@yingtai.net</a>” 配置后结果： <img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeabb664ef2.png" alt="img"></p> <h3 id="4执行命令生成ssh-pub_key">4.执行命令生成ssh pub_key</h3> <h5 id="ssh-keygen--t-rsa--c-richardyingtainet">ssh-keygen -t rsa -C “<a href="mailto:richard@yingtai.net">richard@yingtai.net</a>”</h5> <h5 id="执行命令多次回车后出现如下：">执行命令多次回车后出现如下：</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efead3da85a2.png" alt="img"></p> <h5 id="到ssh的默认目录下查看：（默认目录一般是：cusersrichardssh）">到.ssh的默认目录下查看：（默认目录一般是：C:\\Users\\richard.ssh\\）</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeadeb4b9e6.png" alt="img"></p> <h3 id="5打开生成后的id_rsapub文件，copy内容到git-ssh个人设置">5.打开生成后的id_rsa.pub文件，copy内容到git ssh个人设置</h3> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeaf7a89c44.png" alt="img"></p> <h5 id="点击add-key后如下界面是已经配置好：">点击add key后如下界面是已经配置好：</h5> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeafc446406.png" alt="img"></p> <h3 id="6本地拉取代码">6.本地拉取代码</h3> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/5efeb2d3880b6.png" alt="img"></p> ';e.exports=t},ad8a:function(e,n,t){var o={"./category.js":"d633","./comment.js":"0558","./focus.js":"279a","./friend.js":"c139","./index.js":"cbb7","./post.js":"028e","./site.js":"6990"};function i(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id="ad8a"},b164:function(e,n,t){"use strict";t.r(n);var o=t("a3f7"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},b1f1:function(e,n){var t='<h2 id="uniapp快速开发一个安卓应用">uniApp快速开发一个安卓应用</h2> <h5 id="承接上文：vue-cli创建uniapp项目">承接上文：vue-cli创建uniapp项目</h5> <h5 id="本期将会用到的开发工具及sdk：">本期将会用到的开发工具及SDK：</h5> <p>1，[HBuilderX][<a href="https://www.dcloud.io/%5D">https://www.dcloud.io/]</a> 2，[Android Studio][<a href="http://www.android-studio.org/%5D">http://www.android-studio.org/]</a> 3，[Android SDK][<a href="https://nativesupport.dcloud.net.cn/UniMPDocs/SDKDownload/android%5D">https://nativesupport.dcloud.net.cn/UniMPDocs/SDKDownload/android]</a></p> <pre><code>步骤1：\n\n将上期创建的项目，用HBuilderX打开，运行到浏览器看效果，编写代码，再本地打包，HBuilderX部分操作完成\n\n步骤2：\n\n下载Android SDK，因SDK版本更新太快，每个版本需要改动的较大。故不提供图片做为参考\n\n步骤3：\n\n用Android Studio打开SDK实例demo，Android Studio会自动下载依赖，可以真机调测，或build出正式版\n\n步骤4：\n\n将HBuilderX打包出来的文件，复制到实例demo的\\app\\src\\main\\assets\\apps目录下\n\n4.1，文件名改为实例demo的文件名\n\n4.2，manifest.json中的“id&quot;改为实例的”id“\n\n步骤5：\n\n此时可以真机调试查看APP，亦可打包出正式版本；如需要做更多修改，则需要具备一定的Android开发能力\n</code></pre><p><img src="https://imgkr2.cn-bj.ufileos.com/199dfda6-c527-4c36-997c-1df3f2da0a32.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=pn%252Fl7psQ7x7wQAI4vxpRim97D3A%253D&Expires=1608013958" alt="10"></p> <h5 id="如添加地图操作：androidmanifestxml文件中添加权限和meta-data的packagename-key">如添加地图操作：AndroidManifest.xml文件中添加权限和meta-data的packageName key</h5> <p><img src="https://imgkr2.cn-bj.ufileos.com/327ae978-eb13-4f78-8f9a-aac2ecd1bed1.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=iSDS%252BcXfPf%252Fop5A8j2F1FDj71xQ%253D&Expires=1608013987" alt="12"> <img src="https://imgkr2.cn-bj.ufileos.com/fa465704-1989-4639-97a9-2933c8fa8f0b.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=SHptQJRWGKsgm2QEp11%252FwwvpKNU%253D&Expires=1608013992" alt="11"></p> <h4 id="阶段总结：">阶段总结：</h4> <p>1，需要注意的 id 的统一，package name的统一</p> <p>2，如需要添加地图操作，uniapp的模块配置中的定位服务和maps服务并填写申请的第三方key</p> ';e.exports=t},b775:function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("8931");var i=o(t("82ae")),a=i.default.create({baseURL:Object({NODE_ENV:"production",BASE_URL:""}).VUE_APP_BASE_API,timeout:5e3});a.interceptors.request.use((function(e){return e}),(function(e){return Promise.reject(e)})),a.interceptors.response.use((function(e){var n=e.data;return 2e4!==n.code?Promise.reject(new Error(n.message||"Error")):n}),(function(e){return Promise.reject(e)}));var r=a;n.default=r},be67:function(e,n){var t='<h2 id="vue框架跨域配置">vue框架跨域配置</h2> <h4 id="在当前项目的根路径下新建一个文件文件名是固定的-vueconfigjs">在当前项目的根路径下新建一个文件,文件名是固定的 vue.config.js</h4> <h4 id="1，简单代理">1，简单代理</h4> <pre><code>//vue.config.js\nmodule.exports = {\n　　　　devServer: {\n　　　　　　open: true,//打开默认浏览器\n　　　　　　host: &#39;localhost&#39;,\n　　　　　　port: 8080,\n　　　　　　https: false,//忽略https\n　　　　　　//以上的ip和端口是我们本机的;下面为需要跨域的\n　　　　　　proxy: {  //配置跨域\n　　　　　　　　&#39;/api&#39;: {\n　　　　　　　　　　target: &#39;http://mcenter.test.cbus/api-mcenter/tool&#39;,  //这里后台的地址模拟的;应该填写你们真实的后台接口\n　　　　　　　　　　ws: true,//代理websocket\n　　　　　　　　　　 secure: false,//忽略https\n　　　　　　　　　　changOrigin: true,  //允许跨域\n　　　　　　　　　　pathRewrite: {\n　　　　　　　　　　　　&#39;^/api&#39;: &#39;&#39;  //请求的时候使用这个api就可以\n　　　　　　　　　　}，\n　　　　　　　　　　 cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n　　　　　　}\n　　　　}\n　　}\n}\n\n实现讲解：将请求的URL：&#39;http://localhost:8080/api-mcenter/tool/passport/login.html&#39;中的http://localhost:8080代理为：&#39;http://mcenter.test.cbus/api-mcenter/tool&#39;\n最终的请求地址为：&#39;http://mcenter.test.cbus/api-mcenter/tool/api-mcenter/tool/passport/login.html&#39;\n</code></pre><h4 id="2，多环境代理">2，多环境代理</h4> <h5 id="2-1，在vueconfigjs同目录下新建serverdevjs文件">2-1，在vue.config.js同目录下新建.server.dev.js文件</h5> <pre><code>//server.dev.js文件中\n\n//yarn start dev          读取.server.dev.js文件中的default配置\n//yarn start dev:test     读取.server.dev.js文件中的test配置，test覆盖default\n//yarn start dev:uat      读取.server.dev.js文件中的uat配置，uat覆盖default\n//yarn start pro:test     读取.server.pro.js文件中的配置。\nmodule.exports = {\n  default: {//默认配置，被使用到的其他配置会覆盖默认配置\n    host: &#39;mcenter.me.cbus&#39;,\n    port: 9002,\n    proxy: {\n      &#39;/api-mcenter/tool&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.me.cbus:8501/api-mcenter/tool&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/api-mcenter/tool&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/api-msg/stomp/websocket&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.me.cbus:8201&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        ws: true\n      },\n      &#39;/fserver/files&#39;: {//反向代理到真实服务\n        target: &#39;http://fserver.dev.cbus/fserver/files&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver/files&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/fserver&#39;: {//反向代理到真实服务\n        target: &#39;http://fserver.dev.cbus/fserver&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/mock-api&#39;: {//反向代理到本地mock服务,mock数据在mock文件夹中\n        target: &#39;http://127.0.0.1:3333/mock-api&#39;,\n        changeOrigin: true,\n        pathRewrite: {&#39;^/mock-api&#39;: &#39;&#39;}\n      }\n    }\n  },\n  test: {//若有与default不同的，会覆盖default的配置\n    host: &#39;mcenter.me.cbus&#39;,\n    port: 9002,\n    proxy: {\n      &#39;/api-mcenter/tool&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.test.cbus/api-mcenter/tool&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/api-mcenter/tool&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/api-msg/stomp/websocket&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.test.cbus&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        ws: true\n      },\n      &#39;/fserver/files&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.test.cbus/fserver/files&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver/files&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/fserver&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.test.cbus/fserver&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n    }\n  },\n  uat: {//若有与default不同的，会覆盖default的配置\n    host: &#39;mcenter.me.cbus&#39;,\n    port: 9002,\n    proxy: {\n      &#39;/api-mcenter/tool&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.uat.cbus/api-mcenter/tool&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/api-mcenter/tool&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/api-msg/stomp/websocket&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.uat.cbus&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        ws: true\n      },\n      &#39;/fserver/files&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.uat.cbus/fserver/files&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver/files&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n      &#39;/fserver&#39;: {//反向代理到真实服务\n        target: &#39;http://mcenter.uat.cbus/fserver&#39;,\n        secure: false,//忽略https\n        changeOrigin: true,//解决跨域\n        pathRewrite: {&#39;^/fserver&#39;: &#39;&#39;},\n        cookieDomainRewrite: &#39;mcenter.me.cbus&#39;,//修改cookie的host作用域\n      },\n    }\n  }\n}\n</code></pre><h5 id="2-2，在packagejson文件中修改启动命令">2-2，在package.json文件中修改启动命令</h5> <pre><code>//package.json文件中\n&quot;scripts&quot;: {\n    &quot;start&quot;: &quot;vue-cli-service --env&quot;,//添加了尾部的 --env\n    &quot;serve&quot;: &quot;uni-serve --env&quot;,//添加了尾部的 --env\n    }</code></pre><h5 id="2-3，修改vueconfigjs内容">2-3，修改vue.config.js内容</h5> <pre><code>//vue.config.js文件中\n\nconst path = require(&#39;path&#39;)//引入node path模块\nconst process = require(&#39;process&#39;)//引入node process模块\nconst rawArgv = process.argv.slice(2)//可以获取到 &#39;--env&#39;,和启动命令传入的参数&#39;dev:test&#39;\nconst args = require(&#39;minimist&#39;)(rawArgv, {})\nlet serverConfig = getServerConfig(process.cwd(), args.env)//获取到的配置文件内容\nfunction getServerConfig(dir, envArg) {//参数为 文件的绝对地址，&#39;dev:test&#39;\n  if (&#39;undefined&#39; === envArg || undefined === envArg) {\n    return {//如果没有传入启动参数，则启动默认配置\n      host: &#39;localhost&#39;,\n      port: &#39;8080&#39;,\n      proxy: {}\n    };\n  }\n  if ((!envArg &amp;&amp; typeof envArg === &quot;boolean&quot;)) {//如果启动参数不存在或类型不对时，报错打印信息\n    console.log(&#39;\\x1B[31m未指定环境变量参数模式\\x1B[0m&#39;);\n    process.exit(1);\n    return;\n  }\n  if ((envArg &amp;&amp; typeof envArg === &quot;boolean&quot;) || &#39;undefined&#39; === envArg) {//如果启动参数存时 类型不对或undefined，报错打印信息\n    console.log(&#39;\\x1B[31m未指定环境变量参数,执行命令如： yarn start dev 或者 yarn start dev:test!!\\x1B[0m&#39;);\n    console.log(&#39;\\x1B[32m启动命令如: yarn start dev 或 yarn start dev:tes&#39; +\n      &#39;t\\x1B[0m&#39;);\n    console.log(&#39;\\x1B[33m如果没有配置，可以执行命令来创建：yarn soul env dev 或 yarn soul env pro\\x1B[0m&#39;);\n    process.exit(1);\n    return;\n  }\n  try {//解析启动参数，查找配置文件，获取配置内容\n    let env = envArg.split(&quot;:&quot;)[0];\n    let key = envArg.split(&quot;:&quot;)[1];\n    const projectConfigFile = path.resolve(dir, &#39;.server.&#39; + env + &#39;.js&#39;);\n    const projectConfig = require(projectConfigFile)\n    let envConfig = projectConfig.default;\n    if (key) {\n      let config = projectConfig[key];\n      if (!config) {\n        console.log(&#39;\\x1B[31m------------.server.&#39; + env + &#39;.js未找到[&#39; + key + &#39;]的配置信息-------\\x1B[0m&#39;);\n        console.log(&#39;\\x1B[32m请在.server.&#39; + env + &#39;.js中添加[&#39; + key + &#39;]的配置信息\\x1B[0m&#39;);\n        process.exit(1);\n      }\n      if (envConfig) {\n        envConfig = Object.assign({}, envConfig, config);\n      } else {\n        envConfig = config;\n      }\n    }\n    console.log(&quot;\\x1B[33m加载环境变量配置:&quot;);\n    return envConfig;\n  } catch (err) {\n    console.log(&#39;\\x1B[31m加载环境配置文件失败！\\x1B[0m&#39;, err.message);\n    console.log(&#39;\\x1B[32m可以执行命令来创建：yarn soul env &#39; + env + &#39;\\x1B[0m&#39;)\n    process.exit(1);\n  }\n}\n\nmodule.exports = {\n  publicPath: &#39;/mcenter/tool&#39;,\n  devServer: {\n    host: serverConfig.host,\n    port: serverConfig.port,\n    proxy: serverConfig.proxy\n  },\n  transpileDependencies: [&#39;luch-request&#39;, &#39;uview-ui&#39;],//babe编译需要转成es5属性的依赖包\n}\n</code></pre><h4 id="阶段总结">阶段总结</h4> <p>1，跨域是为了解决“同源策略”，即“协议，域名，端口”统一</p> <p>2，需要跟后端确认好请求条件，设置好Heders内容</p> ';e.exports=t},bff1:function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"app"}},[t("loading"),t("layout-header"),t("layout-body"),t("layout-footer")],1)},i=[]},c139:function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;for(var o=t("03a1"),i=[{id:0,siteName:"FZY′blog",path:"https://www.fengziy.cn",desc:"一个It技术的探索者"}],a=15,r=0;r<a;r++)i.push(o.mock({id:"@increment",siteName:"@cname",path:"@url",desc:"@ctitle(5,20)"}));var s=[{url:"/friend",type:"get",response:function(e){return{code:2e4,data:i}}}];n.default=s},c428:function(e,n,t){"use strict";t.r(n);var o=t("0445"),i=t("13e9");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("a089");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"290606d6",null);n["default"]=s.exports},c64a:function(e,n,t){"use strict";t.r(n);var o=t("634f"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},cbb7:function(e,n,t){t("ff27"),t("8931"),t("cb0b"),t("3825"),t("4856"),t("08c9");var o=t("ed08"),i=t("03a1");function a(e){return function(n){var t=null;if(e instanceof Function){var a=n.body,r=n.type,s=n.url;t=e({method:r,body:JSON.parse(a),query:(0,o.param2Obj)(s)})}else t=e;return i.mock(t)}}i.setup({timeout:"200-600"});var r=t("ad8a");r.keys().forEach((function(e){"./index.js"!==e&&r(e).default.forEach((function(e){var n=e.url,t=e.type,o=e.response;i.mock(new RegExp("^"+n),t,a(o))}))}))},cc86:function(e,n){var t='<h2 id="百度地图-vue-baidu-map">百度地图 vue-baidu-map</h2> <ol> <li>百度示例网址：<a href="http://lbsyun.baidu.com/jsdemo.htm#webgl4_0">http://lbsyun.baidu.com/jsdemo.htm#webgl4_0</a></li> <li>百度JSAPI网址：<a href="http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_webgl_1_0.html">http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_webgl_1_0.html</a></li> </ol> <h4 id="引入使用">引入使用</h4> <pre><code class="language-vue">//main.js\n\nimport BaiduMap from &#39;common/components/vue-baidu-map&#39;\nimport styleJson from &#39;common/mapStyle/custom_map_config4-2.json&#39;//自定义地图样式\n\nVue.use(BaiduMap, {\n  // ak 是在百度地图开发者平台申请的密钥 详见 http://lbsyun.baidu.com/apiconsole/key */\n  ak: &#39;CpmeIdqjNe7lNu74ZGEv6UO2IGQrVcqT&#39;\n});\n\n//页面vue\n &lt;baidu-map :center=&quot;centers&quot; :zoom=&quot;zoom&quot; \n            @ready=&quot;handler&quot; class=&quot;map&quot; \n            v-if=&quot;refresh&quot; :ak=&quot;ak&quot;\n            /&gt;\n\n//centers:视角中心点\n//zoom:视角范围大小\n//@ready：地图加载完成回调函数\n//class=&quot;map&quot;： 需要设置height值\n//refresh： 用于强制刷新地图\n//ak：页面ak,如全局ak已写，则此处可不需要这个属性\n\n//地图回调\n  handler({BMap, map}) {\n        let vm = this;\n        vm.BMap = BMap;\n        vm.map = map;\n        //添加导航功能，作用1：将途经点画线至道路中，作用2：导航出线路\n         vm.DrivingRoute = new BMap.DrivingRoute(map, {\n                    onSearchComplete: vm.onSearchComplete//导航回调，可得到线路数据数组\n                })\n                vm.map.setMapStyleV2({styleJson: styleJson});//添加地图自定义样式\n\n         // 判断是否已经定位过了\n                if (localStorage.getItem(&#39;localPos&#39;) == null) {\n                    // 浏览器定位\n                    let geolocation = new BMap.Geolocation();\n                    geolocation.getCurrentPosition(function (r) {\n                        console.log(&#39;r--------------------------------------&#39;, r)\n                        if (this.getStatus() == BMAP_STATUS_SUCCESS) {\n                            localStorage.setItem(&#39;localPos&#39;, JSON.stringify(r))\n                            vm.getPositionCallBack(r)//未定位，获取定位后回调\n                        } else {\n                            vm.$Message.warning(&#39;定位失败，请刷新重试！&#39;)\n                        }\n                    }, {enableHighAccuracy: true})\n\n                } else {\n                    //已定位，获取定位后回调\n                    this.getPositionCallBack(JSON.parse(localStorage.getItem(&#39;localPos&#39;)))\n                }\n                vm.interval1 = setInterval(vm.getVehicleStat(), 3 * 60 * 1000)\n        ......\n        // 添加鼠标滚动缩放\n        map.enableScrollWheelZoom();\n        //添加比例尺控件\n        map.addControl(new BMap.ScaleControl());\n        //添加地图类型控件\n        map.addControl(new BMap.MapTypeControl());\n        //设置地图皮肤\n        map.setMapStyleV2({styleJson: styleJson});\n}\n\n //获取导航路线\n            Driving(start, end, passingList) {\n                let vm = this\n                if (!vm.flagNumber) {//设置某情况下，清除之前的导航结果\n                    vm.DrivingRoute.clearResults()\n                }\n                vm.DrivingRoute.search(start, end, passingList)\n            },\n\n//获取导航结果\n            onSearchComplete(e) {\n                let vm = this\n                vm.flagNumber++\n                let list = e[&#39;Xq&#39;] ? e[&#39;Xq&#39;][0][&#39;bk&#39;][0][&#39;Zq&#39;] : e[&#39;Ol&#39;] ? e[&#39;Ol&#39;][0][&#39;Wh&#39;][0][&#39;yr&#39;] : []\n                if (list.length &amp;&amp; vm.flagNumber &lt; 3) {//获取到结果后，且满足相应条件\n                    if (vm.flagNumber == 1) {//将获取到的数据存到线路集合中\n                        vm.polyLines[0] = list\n                        vm.Driving(vm.againStart, vm.end)//获取上条集合之后，再进行下一段线路的搜索，否则后面的数据到颠倒\n                    }\n                    if (vm.flagNumber == 2) {\n                        vm.polyLines[1] = list\n                        vm.flagNumber = 0\n                        vm.passingList = []\n                        vm.viewShow()//条件满足后，再展示\n                    }\n                }\n            }，                                   \n\n//展示线路、站点、车辆\n            viewShow() {\n                let vm = this\n                vm.map.clearOverlays()\n                vm.markers.forEach(item =&gt; {\n                    vm.addMarker(item)\n                })\n                vm.polyLines.forEach((item, index) =&gt; {\n                    vm.addPolyline(item, index)\n                })\n            },\n\n//添加Marker\n     addMarker(item, index) {\n        let vm = this\n        let point = item.point ? new vm.BMap.Point(item.point.lng, item.point.lat) : \n        new vm.BMap.Point(item.longitude, item.latitude);\n        let marker = new vm.BMap.Marker(point, {\n            icon: new vm.BMap.Icon(&#39;图片路径&#39;, new vm.BMap.Size(50, 50)),\n            offset: new vm.BMap.Size(10, -16)\n          })\n        vm.addLabel(marker, item); //添加label\n        vm.map.addOverlay(marker);//挂载标注\n},\n\n //添加标注label\n  addLabel(markers, item) {\n        let vm = this\n        let label = new vm.BMap.Label(item[&#39;name&#39;], {offset: new vm.BMap.Size(24, -20)})\n         //    label设置样式\n          label.setStyle({\n            color: &quot;black&quot;,\n            fontSize: &quot;12px&quot;,\n            height: &#39;34px&#39;,\n            border: null,\n            padding: &#39;5px&#39;,\n            background: `url(${labels})  `\n          });\n        markers.setLabel(label);\n},\n\n   //添加标注title\n    addTitle(markers, point, item) {\n        let vm = this\n        let opts = {\n          width: 200,     // 信息窗口宽度\n          height: 100,     // 信息窗口高度\n          title: item.name, // 信息窗口标题\n        };\n        let sContent = `&lt;h2 style=&#39;margin:0 0 5px 0;padding:0.2em 0&#39;&gt;\n            ${item &amp;&amp; item.title ? item.title : &#39;标题&#39;}&lt;/h2&gt;&lt;h5&gt;${item &amp;&amp; item.detail ?\n            item.detail : &#39;内容&#39;}&lt;/h5&gt;`;\n        let infoWindow = new vm.BMap.InfoWindow(sContent, opts);  // 创建信息窗口对象\n        markers.addEventListener(&quot;mouseover&quot;, function (e) {\n          vm.map.openInfoWindow(infoWindow, point); //开启信息窗口\n        });\n        markers.addEventListener(&quot;mouseout&quot;, function (e) {\n          vm.map.closeInfoWindow(infoWindow, point); //关闭信息窗口\n        });\n},\n\n//添加线路polyline\n            addPolyline(data, index) {\n                let obj = {}, res = [];\n                data.forEach(item =&gt; {//过滤掉重复数据\n                    let i = item.lng + item.lat + &#39;&#39;\n                    if (obj[i] != i) {\n                        res.push(item)\n                        obj[i] = i\n                    }\n                })\n                let vm = this\n                let path = &#39;M0 0 L-4 2 L0 -2 L4 2 Z&#39;;\n                let sy = new vm.BMap.Symbol(path, {\n                    fillColor: &quot;#fff&quot;,\n                    fillOpacity: 0.6,\n                    scale: 0.8,//图标缩放大小\n                    strokeColor: &quot;#fff&quot;,//设置矢量图标的线填充颜色\n                    strokeWeight: 0,//设置线宽\n                });\n                let wid = res.length &lt; 200 ? &#39;40%&#39; : &#39;5%&#39;//控制集合length的箭头间距\n                let icons = new vm.BMap.IconSequence(sy, &#39;5%&#39;, wid);//\n                let polyline = new vm.BMap.Polyline(res, {\n                    icons: [icons],//添加线路箭头\n                    strokeColor: !index ? &#39;dimgray&#39; : index == 1 ? &#39;mediumseagreen&#39; : &#39;lime&#39;,\n                    enableClicking: false,//是否响应点击事件，默认为true\n                    strokeWeight: &#39;6&#39;,//折线的宽度，以像素为单位\n                    strokeOpacity: 0.5,//折线的透明度，取值范围0 - 1\n                });\n                vm.map.addOverlay(polyline);\n                if (vm.goCenter) {\n                    vm.map.setViewport(res)//根据提供的地理区域或坐标设置地图视野，调整后的视野会保证包含提供的地理区域或坐标\n                    vm.goCenter = false\n                }\n            },\n\n\n\n//添加路书LuShu\n    npm i bmaplib.lushu\n    import LuShu from &#39;bmaplib.lushu&#39;\n     addLushu(){\n      let myIcon = new vm.BMap.Icon(car, new vm.BMap.Size(50, 20), {    //小车图片\n          imageOffset: new vm.BMap.Size(0, 0),    //图片的偏移量。为了是图片底部中心对准坐标点。\n        });\n          let lushu = new LuShu(vm.map, [&#39;轨迹集合&#39;], {\n            defaultContent: &quot;&quot;,\n            autoView: true, //是否开启自动视野调整，如果开启那么路书在运动过程中会根据视野自动调整\n            icon: myIcon,\n            enableRotation: true, //是否设置marker随着道路的走向进行旋转\n            speed: 100,\n            landmarkPois: []\n          });\n          lushu.start();\n}\n\n  //获取定位\n   getPosition(BMap, map){\n     new BMap.Geolocation().getCurrentPosition(function (r) {console.log(r)}）\n}\n\n  //强制刷新地图\n     refreshMap() {\n        this.refresh = false;\n        this.$nextTick(() =&gt; {\n          this.refresh = true\n        })\n}</code></pre> <h4 id="阶段总结">阶段总结</h4> <ol> <li>地图的各方法单独抽离，以备使用</li> <li>地图要设置高度，不然不显示</li> <li>经纬度使用时，检查是否NEW过，否则不显示</li> </ol> ';e.exports=t},cc9a:function(e,n,t){},d633:function(e,n,t){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;t("03a1");var o=[{url:"/category",type:"get",response:function(){return{code:2e4,data:[{id:1,title:"JAVA",href:"/category/java"},{id:2,title:"SpringBoot",href:"/category/SpringBoot"},{id:3,title:"MySql",href:"/category/MySql"},{id:4,title:"随笔",href:"/category/live"}]}}}];n.default=o},d778:function(e,n){var t='<h2 id="intellij-idea-20203破解安装">IntelliJ IDEA 2020.3破解安装</h2> <p>1，正常安装IDEA，选择试用进入软件</p> <p>2，打开插件中心 File -&gt; Settings -&gt; Manage Plugins Reposito，设置仓库地址：<a href="https://repo.idechajian.com/">https://repo.idechajian.com</a> ，搜索关键字“<code>BetterIntellij</code>”</p> <p>3，安装<code>BetterIntellij</code> 插件后重启IDEA。</p> <p>4，打开注册界面<code>Help -&gt; Register</code>，选择添加激活码（见key.txt）激活。</p> <p>如有异常 Key is invalid.</p> <p>Edit Customer VM Options 删除之前的破解依赖</p> <p>host 屏蔽443官网443端口 0.0.0.0 <a href="https://account.jetbrains.com:443">https://account.jetbrains.com:443</a></p> <h3 id="插件安装">插件安装</h3> <p><strong>TranslationPlugin</strong></p> <p>对类，变量，方法想取一个合适的名字，直接选中你想要翻译的词，然后右键选择，或者快捷键 Ctrl+Shift+F3</p> <h5 id="codota">codota</h5> <p>代码自动补全，根据你的代码上下文来给予整行的代码建议，比idea自带的提示还要详细。</p> <h5 id="translation"><strong>Translation</strong></h5> <p>选择Translate，可以直接调出翻译面板，选择Translate and Replace，可以直接将翻译结果显示在下拉框中，选择合适的点击之后会自动替换当前文本</p> <h5 id="vuejs">vue.js</h5> <p>vue代码插件</p> <h5 id="gittoolbox">GitToolBox</h5> <p>git检测更新插件</p> ';e.exports=t},dc89:function(e,n){var t='<h2 id="前端极致压缩-gzip压缩">前端极致压缩-GZIP压缩</h2> <pre><code>安装：npm install --save-dev compression-webpack-plugin\n\nvue.config.js中~\n\nconst CompressionWebpackPlugin = require(&quot;compression-webpack-plugin&quot;);\n// 可加入需要的其他文件类型，比如json\n// 图片不要压缩，体积会比原来还大\nconst productionGzipExtensions = [&quot;js&quot;, &quot;css&quot;];\n\nmodule.exports = {\n  configureWebpack: config =&gt; {\n    if (process.env.NODE_ENV === &quot;production&quot;){\n      return {\n        plugins: [\n          new CompressionWebpackPlugin({\n            // filename: &#39;[path].gz[query]&#39;,\n            algorithm: &quot;gzip&quot;,\n            test: new RegExp(&quot;\\\\.(&quot; + productionGzipExtensions.join(&quot;|&quot;) + &quot;)$&quot;),\n            threshold: 10240, //对超过10k的数据进行压缩\n            minRatio: 0.6 // 压缩比例，值为0 ~ 1\n          })\n        ]\n      };\n    }\n  }</code></pre>';e.exports=t},e3ea:function(e,n,t){"use strict";t.r(n);var o=t("61e0"),i=t("b164");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("f801");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"a7991e5c",null);n["default"]=s.exports},e4d4:function(e,n,t){"use strict";t("17c6")},e5a2:function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("h1",{staticClass:"section-title"},[e._t("default")],2)},i=[]},e6e6:function(e,n,t){"use strict";t.r(n);var o=t("a58f"),i=t.n(o);for(var a in o)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=i.a},e8ca:function(e,n){var t='<h2 id="vue项目使用markdown文档">vue项目使用Markdown文档</h2> <h4 id="1、使用插件mavoneditorhttpswwwnpmjscompackagemavon-editor">1、使用插件[mavonEditor][<a href="https://www.npmjs.com/package/mavon-editor%5D">https://www.npmjs.com/package/mavon-editor]</a></h4> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/blogImage/1607487449591.png" alt="1607487449591"></p> <h4 id="2、mainjs操作">2、main.js操作</h4> <pre><code>// 引入makrdown插件\nimport mavonEditor from &#39;mavon-editor&#39;\nimport &#39;mavon-editor/dist/css/index.css&#39;\nVue.use(mavonEditor);</code></pre><h4 id="3、页面使用">3、页面使用</h4> <pre><code>&lt;template&gt;\n    &lt;div class=&quot;mavonEditor&quot;&gt;\n        &lt;mavon-editor :toolbars=&quot;markdownOption&quot; style=&quot;box-shadow: none;width: 60vw;margin: 0 auto&quot; v-model=&quot;handbook&quot;/&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    name: &quot;contents&quot;,\n    data() {\n      return {\n        markdownOption: {\n          bold: true, // 粗体\n        },\n        handbook: &#39;&#39;\n      };\n    },\n    watch:{\n      &#39;$route.query&#39;(e){\n        if(e.id){\n          this.getList(e.id)\n        }\n      }\n    },\n    methods: {\n      async getList(id) {\n        const data = await import(`../components/article/${id}.md`)\n        this.handbook = data.default\n      }\n    },\n    mounted() {\n      this.getList(this.$route.query.id)\n    }\n  };\n&lt;/script&gt;\n\n&lt;style lang=&quot;less&quot; scoped&gt;\n    .mavonEditor {\n        width: 100%;\n    }\n\n    /deep/ .v-note-wrapper .v-note-panel .v-note-edit.divarea-wrapper {\n        flex: 0;\n        -webkit-flex: 0;\n    }\n\n    /deep/ .v-note-edit.divarea-wrapper {\n        visibility: hidden;\n        flex: 0;\n        height: 0;\n        -webkit-flex: 0;\n    }\n\n    /deep/ .v-note-wrapper .v-note-panel .v-note-show {\n        flex: 1;\n    }\n    /deep/.v-note-wrapper .v-note-panel .v-note-show .v-show-content, .v-note-wrapper .v-note-panel .v-note-show .v-show-content-html{\n        padding: 20px 0;\n    }\n\n    /deep/ .v-note-op {\n        visibility: hidden;\n    }\n\n    /deep/ .v-note-wrapper {\n        box-shadow: none;\n        margin-top: 80px;\n        min-width: 300px;\n        min-height: 300px;\n        z-index: 0;\n        text-align: left;\n    }\n&lt;/style&gt;\n</code></pre><h4 id="4、vue项目查找-md文件">4、vue项目查找 .md文件</h4> <pre><code>const files = require.context(&#39;../components/article&#39;, true, /\\.md$/);//指定目录，全部查找，正则匹配\nlet brr = [];\nlet arr = files.keys().map((item, index) =&gt; {\n  brr.push(item.replace(&#39;./&#39;, &#39;&#39;).replace(&#39;.md&#39;, &#39;&#39;) || &#39;&#39;)\n  //获取到全部文件名集合数组</code></pre><h4 id="5、阶段总结">5、阶段总结</h4> <p>1，此插件为.md的线上编译器+预览</p> <p>2，样式上需要手动调整，如遇到情况展示错误，可加空行或者一个tab间隔分离就OK</p> ';e.exports=t},eb11:function(e,n){var t='<h2 id="axios封装及请求防抖">Axios封装及请求防抖</h2> <pre><code>//request.js文件中\nimport axios from &quot;axios&quot;;\n//import些你需要的插件或者数据...\nlet requests=[];//请求防抖需要收集请求中的集合，并控制过滤\n\n/****** 创建axios实例 ******/\nconst service = axios.create({\n  baseURL: process.env.BASE_URL, // 接口基础路径\n  timeout: 5000  // 请求超时时间\n  // transformResponse 允许自定义原始的响应数据（字符串）\n  transformResponse: [function (data) {\n    try {// 如果转换成功则返回转换的数据结果return JSON.parse(data)\n    } catch (err) {// 如果转换失败，则包装为统一数据格式并返回return data}\n  }]\n})\n\n\n/****** request拦截器==&gt;对请求参数做处理 ******/\nservice.interceptors.request.use(async config =&gt; {\n\n     // 阻止重复请求。当上个请求未完成时，相同的请求不会进行\n    let flag = await stopRepeatRequest(requests, config.url, `${config.url} 请求重复`)\n    if (flag) {return}\n    if (!config.method) {config.method = &quot;get&quot;;}//设置默认请求方式\n    try {setConfig(config);} catch (error) {console.error(error);}//预设请求头\n    //...此处可以考虑添加一些请求loading样式或者什么的\n    return config;\n}, error =&gt; {//请求错误处理,如结束loading什么的操作等 Promise.reject(error)})\n\n\n\n/****** respone拦截器==&gt;对响应做处理 ******/\nservice.interceptors.response.use(\n    response =&gt; {  //成功请求到数据\n        //这里根据后端提供的数据进行对应的处理等\n        allowRequest(requests, response.config.url)//过滤掉已结束的请求\n         if (code === &quot;-9000&quot;) {//前后端约定的一些返回处理}\n        return response.data;\n    },\n    error =&gt; {  //响应错误处理\n       allowRequest(requests, response.config.url)//过滤掉已结束的请求\n        if (code === &quot;-9000&quot;) {//前后端约定的一些返回处理}\n        return Promise.reject(error)\n    }\n);\n// 拦截request,设置全局请求为ajax请求\nfunction setConfig(config, fetch) {\n    let headers = {};\n    // 用户登录后获取的token\n    headers[&quot;token&quot;] = config.headers[&quot;token&quot;] = electronStore.get(&quot;token&quot;) || &quot;&quot;;\n   //预设更多的请求头....\n    if (fetch) {\n        return headers;\n    }\n}\n//请求中的URL集合\nfunction stopRepeatRequest(reqList, url, errorMessage) {\n    if (url.indexOf(&#39;upload/uploadChunkFile&#39;) != -1 || url.indexOf(&#39;api/chat/getUserHistoryMsgs&#39;) != -1 || url.indexOf(&#39;api/chat/ackUserOffLineMsgs&#39;) != -1) {\n        return false\n    }\n    if (reqList.length) {\n       let arr= reqList.filter(item=&gt;item==url)\n        if(arr.length){\n            console.log(errorMessage,49)\n            return  true\n        }\n    }\n    reqList.push(url)\n}\n//单个请求结束后的URL\nfunction allowRequest (reqList, url) {\n    if (reqList.length) {\n        requests=reqList.filter(item=&gt;item!=url)\n    }\n};\nexport default service;\n</code></pre>';e.exports=t},ed08:function(e,n,t){var o=t("ef80").default;Object.defineProperty(n,"__esModule",{value:!0}),n.parseTime=a,n.formatTime=r,n.getQueryObject=s,n.byteLength=c,n.cleanArray=l,n.param=u,n.param2Obj=d,n.html2Text=p,n.objectMerge=m,n.toggleClass=h,n.getTime=g,n.getTimeInterval=f,n.debounce=v,n.deepClone=y,n.uniqueArr=b,n.createUniqueString=w,n.hasClass=q,n.addClass=x,n.removeClass=k,n.getRandomNumberByRange=T,t("4856"),t("854f"),t("3825"),t("08c9"),t("8931"),t("1664"),t("dea3"),t("cd50"),t("b5fb"),t("e791"),t("1770"),t("ff27"),t("47b0"),t("97b5"),t("3b2f"),t("20b4"),t("cb0b"),t("8a61");var i=o(t("22e1"));function a(e,n){if(0===arguments.length)return null;var t,o=n||"{y}-{m}-{d} {h}:{i}:{s}";"object"===(0,i.default)(e)?t=e:("string"===typeof e&&(e=/^[0-9]+$/.test(e)?parseInt(e):e.replace(new RegExp(/-/gm),"/")),"number"===typeof e&&10===e.toString().length&&(e*=1e3),t=new Date(e));var a={y:t.getFullYear(),m:t.getMonth()+1,d:t.getDate(),h:t.getHours(),i:t.getMinutes(),s:t.getSeconds(),a:t.getDay()},r=o.replace(/{([ymdhisa])+}/g,(function(e,n){var t=a[n];return"a"===n?["日","一","二","三","四","五","六"][t]:t.toString().padStart(2,"0")}));return r}function r(e,n){e=10===(""+e).length?1e3*parseInt(e):+e;var t=new Date(e),o=Date.now(),i=(o-t)/1e3;return i<30?"刚刚":i<3600?Math.ceil(i/60)+"分钟前":i<86400?Math.ceil(i/3600)+"小时前":i<172800?"1天前":n?a(e,n):t.getMonth()+1+"月"+t.getDate()+"日"+t.getHours()+"时"+t.getMinutes()+"分"}function s(e){e=null==e?window.location.href:e;var n=e.substring(e.lastIndexOf("?")+1),t={},o=/([^?&=]+)=([^?&=]*)/g;return n.replace(o,(function(e,n,o){var i=decodeURIComponent(n),a=decodeURIComponent(o);return a=String(a),t[i]=a,e})),t}function c(e){for(var n=e.length,t=e.length-1;t>=0;t--){var o=e.charCodeAt(t);o>127&&o<=2047?n++:o>2047&&o<=65535&&(n+=2),o>=56320&&o<=57343&&t--}return n}function l(e){for(var n=[],t=0;t<e.length;t++)e[t]&&n.push(e[t]);return n}function u(e){return e?l(Object.keys(e).map((function(n){return void 0===e[n]?"":encodeURIComponent(n)+"="+encodeURIComponent(e[n])}))).join("&"):""}function d(e){var n=e.split("?")[1];return n?JSON.parse('{"'+decodeURIComponent(n).replace(/"/g,'\\"').replace(/&/g,'","').replace(/=/g,'":"').replace(/\+/g," ")+'"}'):{}}function p(e){var n=document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText}function m(e,n){return"object"!==(0,i.default)(e)&&(e={}),Array.isArray(n)?n.slice():(Object.keys(n).forEach((function(t){var o=n[t];"object"===(0,i.default)(o)?e[t]=m(e[t],o):e[t]=o})),e)}function h(e,n){if(e&&n){var t=e.className,o=t.indexOf(n);-1===o?t+=""+n:t=t.substr(0,o)+t.substr(o+n.length),e.className=t}}function g(e){return"start"===e?(new Date).getTime()-7776e6:new Date((new Date).toDateString())}function f(e){var n,t,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Date.now();if(0===arguments.length)return null;n="object"===(0,i.default)(e)?e.getTime():e,t="object"===(0,i.default)(o)?o.getTime():o;var a=t-n,r=Math.floor(a/864e5),s=a%864e5,c=Math.floor(s/36e5),l=s%36e5,u=Math.floor(l/6e4),d=Math.round(l%6e4/1e3);return"".concat(r," 天 ").concat(c," 时 ").concat(u," 分 ").concat(d," 秒")}function v(e,n,t){var o,i,a,r,s,c=function c(){var l=+new Date-r;l<n&&l>0?o=setTimeout(c,n-l):(o=null,t||(s=e.apply(a,i),o||(a=i=null)))};return function(){for(var i=arguments.length,l=new Array(i),u=0;u<i;u++)l[u]=arguments[u];a=this,r=+new Date;var d=t&&!o;return o||(o=setTimeout(c,n)),d&&(s=e.apply(a,l),a=l=null),s}}function y(e){if(!e&&"object"!==(0,i.default)(e))throw new Error("error arguments","deepClone");var n=e.constructor===Array?[]:{};return Object.keys(e).forEach((function(t){e[t]&&"object"===(0,i.default)(e[t])?n[t]=y(e[t]):n[t]=e[t]})),n}function b(e){return Array.from(new Set(e))}function w(){var e=+new Date+"",n=parseInt(65536*(1+Math.random()))+"";return(+(n+e)).toString(32)}function q(e,n){return!!e.className.match(new RegExp("(\\s|^)"+n+"(\\s|$)"))}function x(e,n){q(e,n)||(e.className+=" "+n)}function k(e,n){if(q(e,n)){var t=new RegExp("(\\s|^)"+n+"(\\s|$)");e.className=e.className.replace(t," ")}}function T(e,n){return Math.round(Math.random()*(n-e)+e)}},ee90:function(e,n){var t='<h2 id="uniapp-地图使用">uniApp 地图使用</h2> <p>1、[官网地址][<a href="https://uniapp.dcloud.io/component/map%5D%EF%BC%8C%5B%E6%8F%92%E4%BB%B6%E5%B8%82%E5%9C%BA%E5%9C%B0%E5%9D%80%5D%5Bhttps://ext.dcloud.net.cn/%5D">https://uniapp.dcloud.io/component/map]，[插件市场地址][https://ext.dcloud.net.cn/]</a></p> <p>2、地图分显示，和获取定位两部分；显示可选择腾讯地图、高德地图、百度地图</p> <p>3、获取定位方法由 uniApp 提供，坐标为固定的 gcj02、即使设置类型 wgs84,也是得到 gcj02 坐标</p> <pre><code class="language-vue">&lt;template&gt;\n    &lt;map :controls=&quot;controls&quot; :latitude=&quot;latitude&quot; :longitude=&quot;longitude&quot; :markers=&quot;markers&quot; :polyline=&quot;polyline&quot; :scale=&quot;scale&quot; :show-compass=&quot;true&quot; :show-location=&quot;true&quot; :style=&quot;mapStyle&quot; @controltap=&quot;controltap&quot; @regionchange=&quot;regionchange&quot; id=&quot;map2&quot;&gt;\n&lt;/template&gt;\n</code></pre> <h2 id="创建地图">创建地图</h2> <pre><code>onReady() {\n            let vm = this\n            vm.map = uni.createMapContext(&#39;map2&#39;, this)\n            vm.getLocation()\n        },\n\nmethods: {\n        //获取定位\n            getLocation() {\n                let vm = this\n                uni.getLocation({\n                    type: &#39;gcj02&#39;,\n                    geocode: true,//获取城市具体地址\n                    success: (e) =&gt; {\n                        if (e.address.city) {\n                            vm.cityName = e.address.city\n                            vm.poiName = e.address.poiName\n                            vm.moveToLocation()\n                        }\n                        vm.latitude = e.latitude\n                        vm.longitude = e.longitude\n                        vm.run = &#39;start&#39;\n                        vm.addDingwei()\n                    },\n                    fail: (e) =&gt; {\n                        vm.longitude = 113.953834 //e.longitude\n                        vm.latitude = 22.540235 //e.latitude\n                        vm.run = &#39;start&#39;\n                        vm.addDingwei()\n                    },\n                })\n            },  \n            //移动到指定位置\n            moveToLocation() {\n                let vm = this\n                let falg = Object.keys(vm.map).length\n                if (falg) {\n                    vm.map.moveToLocation({\n                        longitude: vm.longitude,\n                        latitude: vm.latitude,\n                        success: () =&gt; {}\n                    })\n                }\n            }，  \n            //添加定位点\n            addDingwei() {\n                let vm = this,arr = [];\n                arr.push({\n                    id: 0,\n                    latitude: vm.latitude,\n                    longitude: vm.longitude,\n                    iconPath: &#39;../../static/dingwei.png&#39;,\n                    callout: {\n                        content: &#39;删除此站点&#39;, //文本\n                        color: &#39;#ffffff&#39;, //文字颜色\n                        fontSize: 14, //文本大小\n                        borderRadius: 2, //边框圆角\n                        bgColor: &#39;#00c16f&#39;, //背景颜色\n                        display: &#39;BYCLICK&#39;, //点击显示\n                    },\n                })\n                vm.markers = arr\n            },  \n            //点击控件\n            controltap(e) {\n                let vm = this\n                if (e.detail.controlId === 0) {\n                    vm.getLocation()\n                }\n                if (e.detail.controlId === 1) {\n                    uni.chooseLocation({\n                        success: (e) =&gt; {\n                            vm.getLine(e)\n                        }\n                    })\n                }\n            },  \n            //移动地图位置触发获取地图中心店坐标\n            regionchange(e) {\n                let vm = this\n                if (e.type != &#39;begin&#39; &amp;&amp; vm.run == &#39;start&#39;) {\n                    vm.getCenterLocation()\n                }\n            },\n            }\n</code></pre><h2 id="唤醒第三方地图">唤醒第三方地图</h2> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/blogImage/1607480370610.png" alt=""></p> <pre><code>\n\n//引入插件\nimport Map from &#39;@/js_sdk/fx-openMap/openMap.js&#39;\n              //既有起点也有终点\n             let options = {\n                  origin: { //导航起点坐标和名称,如果不传则起点为当前位置\n                      latitude: vm.latitude,\n                      longitude: vm.longitude,\n                      name: &quot;大冲商务中心C座&quot;\n                  },\n                  destination: { //导航终点点坐标和名称\n                      latitude: item.latitude,\n                      longitude: item.longitude,\n                      name: item.name\n                  },\n                  mode: &quot;drive&quot; //导航方式 公交：bus驾车：drive（默认）,步行：walk,骑行：bike\n              }\n              //只有有终点(起点默认为当前位置)\n              let options = {\n                  destination: { //导航终点点坐标和名称\n                      latitude: item.latitude,\n                      longitude: item.longitude,\n                      name: item.name\n                  },\n                  mode: &quot;drive&quot; //导航方式 公交：bus驾车：drive（默认）,步行：walk,骑行：bike\n              }\n              Map.openMap(options, &#39;gcj02&#39;)</code></pre><h2 id="app-端生成导航线路">app 端生成导航线路</h2> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/blogImage/1607481679376.png" alt=""></p> <pre><code>//引入插件\nimport Amap from &#39;../../js_sdk/Lyn4ever-gaodeRoutePlanning/lyn4ever-gaode.js&#39;;  \n\n//搜索路线\ngetLine(item) {\nlet vm = this\nlet latitude = JSON.stringify(vm.latitude).slice(0, 9),\n    longitude = JSON.stringify(vm.longitude).slice(0, 10);\nlet startPoi = longitude + &#39;,&#39; + latitude;\nlet wayPoi = &quot;&quot;;\nlet endPoi = item.longitude + &#39;,&#39; + item.latitude;\nvm.polyline = []\nif (window === undefined) {\n    Amap.line(startPoi, endPoi, wayPoi, function(res) {\n        vm.polyline.push(res)\n    });\n    Amap.markers(startPoi, endPoi, wayPoi, function(res) {\n        vm.markers = res\n    });\n} else {\n    window.open(&#39;https://map.baidu.com/&#39;)\n}\n},</code></pre><h4 id="阶段总结">阶段总结</h4> <p>1，运行环境判断 window === undefined？“app”：“h5”</p> <p>2，变量样式获取使用 :style=&quot;mapStyle&quot;||:style=&quot;coverView()&quot;</p> <p>3，造轮子之前，先查看插件库，研究研究</p> ';e.exports=t},ef47:function(e,n){var t='<h2 id="githubpages、giteepages建立个人博客教程">GitHubPages、giteePages建立个人博客教程</h2> <h4 id="1，github新建仓库，正常上传代码，系统会识别indexhtml文件（打包后的文件）">1，GitHub新建仓库，正常上传代码，系统会识别index.HTML文件（打包后的文件）</h4> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226182653325.png" alt="image-20201226182653325"></p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226182725475.png" alt="image-20201226182725475"></p> <h4 id="2，操作小技巧：系统会识别根目录下的indexhtml文件。可以切换选择docs路径，并将项目打包输出文件夹名称改为docs">2，操作小技巧：系统会识别根目录下的index.HTML文件。可以切换选择/docs路径，并将项目打包输出文件夹名称改为/docs</h4> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226183127488.png" alt="image-20201226183127488"></p> <h4 id="3，gitee上可以同步github上的项目代码，再生成pages服务">3，Gitee上可以同步GitHub上的项目代码，再生成Pages服务</h4> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226183342723.png" alt="image-20201226183342723"></p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226183452134.png" alt="image-20201226183452134"></p> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226183550803.png" alt="image-20201226183550803"></p> <h4 id="4，可以在网上找开源的模板，或者纯手工撸一个">4，可以在网上找开源的模板，或者纯手工撸一个</h4> <p><img src="https://gitee.com/yingzhixiaoyi/mdnice/raw/master/image-20201226183801397.png" alt="image-20201226183801397"></p> ';e.exports=t},ef4d:function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return i}));var o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"layout-body"}},[t("router-view"),t("back-top")],1)},i=[]},efa5:function(e,n,t){"use strict";t.r(n);var o=t("8ef1"),i=t("e6e6");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("1120");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"561d2d36",null);n["default"]=s.exports},f038:function(e,n){var t='<h2 id="vueconfigjs-配置">vue.config.js 配置</h2> <pre><code>module.exports = {\n  devServer: {\n    port: 8888,//端口号\n  },\n  lintOnSave: false,//关闭eslint检查\n  publicPath: &quot;./&quot;,//基本路径\n  assetsDir: &quot;static&quot;,//放置生成的静态资源 (js、css、img、fonts) 的目录\n  outputDir: &#39;docs&#39;,//输出文件目录\n  indexPath: &quot;index.html&quot;,//指定生成的 index.html 的输出路径 (相对于 outputDir)\n  filenameHashing: true,//文件名哈希\n  chainWebpack: config =&gt; {//是一个函数，允许对内部的 webpack 配置进行更细粒度的修改。\n    config.module\n      .rule(&#39;md&#39;)\n      .test(/\\.md$/)\n      .use(&#39;html-loader&#39;)\n      .loader(&#39;html-loader&#39;)\n      .end()\n      .use(&#39;markdown-loader&#39;)\n      .loader(&#39;markdown-loader&#39;)\n      .end()\n  }\n}</code></pre>';e.exports=t},f801:function(e,n,t){"use strict";t("cc9a")},fdba:function(e,n,t){"use strict";t.r(n);var o=t("e5a2"),i=t("7f18");for(var a in i)["default"].indexOf(a)<0&&function(e){t.d(n,e,(function(){return i[e]}))}(a);t("360e");var r=t("4ac2"),s=Object(r["a"])(i["default"],o["a"],o["b"],!1,null,"04c9c7b8",null);n["default"]=s.exports}});
//# sourceMappingURL=app.a4aeb492.js.map